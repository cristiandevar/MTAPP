spec_i([ proc,0,'Stub for InvoiceRegister','InvoiceRegister',80,eng,'18_0_2-169539' ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
rule_i(0,datastore(1,'DS_LAST_CHANGE','')).
rule_i(0,datastore(1,'LOCK_RETRY','10')).
rule_i(0,datastore(1,'WAIT_RECORD','0')).
rule_i(0,datastore(1,'ISOLATION_LEVEL','CR')).
rule_i(0,datastore(1,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(1,'COMMENT_ON','No')).
rule_i(0,datastore(1,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(1,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(1,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(1,'CS_SCHEMA','')).
rule_i(0,datastore(1,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(1,'JRN400','QSQJRN')).
rule_i(0,datastore(1,'CREATE_SAVF','Yes')).
rule_i(0,datastore(1,'PGMLIB','')).
rule_i(0,datastore(1,'DTALIB','')).
rule_i(0,datastore(1,'RecycleRWMin','30')).
rule_i(0,datastore(1,'RecycleRWType','1')).
rule_i(0,datastore(1,'RecycleRW','-1')).
rule_i(0,datastore(1,'POOL_STARTUP','No')).
rule_i(0,datastore(1,'POOLSIZE_RW','10')).
rule_i(0,datastore(1,'UnlimitedRWPool','-1')).
rule_i(0,datastore(1,'PoolRWEnabled','-1')).
rule_i(0,datastore(1,'CS_RPCPGML','')).
rule_i(0,datastore(1,'JDBC_DATASOURCE','')).
rule_i(0,datastore(1,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(1,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(1,'USER_PASSWORD','')).
rule_i(0,datastore(1,'USER_ID','')).
rule_i(0,datastore(1,'TRUSTED_CONNECTION','Yes')).
rule_i(0,datastore(1,'CS_CONNECT','First')).
rule_i(0,datastore(1,'DBMS_PORT','')).
rule_i(0,datastore(1,'CS_SERVER','CRISTIAN\SQLEXPRESS')).
rule_i(0,datastore(1,'CS_DBNAME',mtaKB2)).
rule_i(0,datastore(1,'CS_FLEDSNAME','')).
rule_i(0,datastore(1,'CS_DRVNAME','sql server')).
rule_i(0,datastore(1,'CS_DSNAME','')).
rule_i(0,datastore(1,'DB_URL','')).
rule_i(0,datastore(1,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(1,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(1,'JDBC_DRIVER','com.microsoft.sqlserver.jdbc.SQLServerDriver')).
rule_i(0,datastore(1,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(1,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(1,'MAIN_DS','-1')).
rule_i(0,datastore(1,'REORG_GEN','8')).
rule_i(0,datastore(1,'HelpKeyword','20')).
rule_i(0,datastore(1,'DBMS',12)).
rule_i(0,datastore(1,'NAME','Default')).
rule_i(0,prop(idNULLS_BEHAVIOR,idNB_Current)).
rule_i(0,prop('CALL_PROTOCOL','HTTP')).
rule_i(0,prop(idISPRCWEBSERVICE,'0')).
rule_i(0,maingen(41)).
rule_i(0,parm([ 'InvoiceId','AllOk' ],[])).
rule_i(0,parmio([ [ 'InvoiceId',in ],[ 'AllOk',out ] ])).
rule_i(0,stub(proc)).
 
a_i(1,1,f,'Err',[],[ [],[ t('0',3) ] ]).
 
v_i(f,i,1,[]).
v_i(f,o,1,'Err').
 
 
 
 
 
 
attri_i('Errmsg',[ 'Gx_emsg',char,70,0,'',1,'Error text','',5 ]).
attri_i('Err',[ 'Gx_err',int,3,0,'ZZ9',1,'Error code','',4 ]).
attri_i('AllOk',[ 'AllOk',boolean,4,0,'',0,'','',3 ]).
attri_i('InvoiceId',[ 'InvoiceId',int,6,0,'',0,'','',2 ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
break_i(1,rpt,0,[],[ [],[],[] ]).
 
b_group_i(1,1,lit,0,1,0).
 
b_line_i(1,1,1,cmd,1,[ t('',163,1,0),t('AInvoiceRegister',3,1,0),t(41,3,1,0),t('',3,1,0),t(',',7,1,0),t('InvoiceId',23,1,0),t(',',7,1,0),t('AllOk',23,1,0),t(')',4,1,0) ]).
 
 
 
 
 
 
page_layout_i([ 66,0,6 ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
calling_main_i(1,37).
 
 
 
 
 
 
 
 
 
struct_dt_i([ 26,93,0 ],name,'General\UI\SDTContextSession').
struct_dt_i([ 26,93,0 ],namespace,mtaKB).
struct_dt_i([ 26,93,0 ],'ObjName','SDTContextSession').
struct_dt_i([ 26,93,0 ],'ObjDesc','SDTContext Session').
struct_dt_i([ 26,93,0 ],'ExternalName','SDTContextSession').
struct_dt_i([ 26,93,0 ],'ExternalNamespace',mtaKB).
struct_dt_i([ 26,93,0 ],'JsonInputFormat','JsonInputWrapped').
struct_dt_i([ 26,93,0 ],'JsonInclude',idJsonNoProperty).
struct_dt_i([ 0,5,0 ],name,'Product').
struct_dt_i([ 0,5,0 ],namespace,mtaKB).
struct_dt_i([ 0,5,0 ],significantName,'Product').
struct_dt_i([ 0,5,0 ],'ObjName','Product').
struct_dt_i([ 0,5,0 ],'ObjDesc','Product').
struct_dt_i([ 0,5,0 ],'ExternalName','Product').
struct_dt_i([ 0,5,0 ],'ExternalNamespace',mtaKB).
struct_dt_i([ 0,5,0 ],key,[ 15 ]).
struct_dt_i([ 0,5,0 ],lvl,5).
struct_dt_i([ 26,13,0 ],name,'GeneXus\Common\Messages').
struct_dt_i([ 26,13,0 ],namespace,'GeneXus').
struct_dt_i([ 26,13,0 ],'ObjName','Messages').
struct_dt_i([ 26,13,0 ],'ObjDesc','Messages').
struct_dt_i([ 26,13,0 ],'ExternalName','Messages').
struct_dt_i([ 26,13,0 ],'ExternalNamespace','GeneXus').
struct_dt_i([ 26,13,0 ],'JsonInputFormat','JsonInputWrapped').
struct_dt_i([ 26,13,0 ],collection,'True').
struct_dt_i([ 26,13,0 ],datatype,[ 26,13,30 ]).
struct_dt_i([ 26,13,0 ],'CollectionItemName','Message').
struct_dt_i([ 26,13,0 ],'XmlName','').
struct_dt_i([ 26,13,0 ],'XmlCollectionItemName','').
struct_dt_i([ 26,13,0 ],'XmlNamespace','').
struct_dt_i([ 26,13,0 ],'CollectionSerialization',idXmlCollectionWrapped).
struct_dt_i([ 26,13,0 ],'XmlInclude',idXmlIncludeAlways).
struct_dt_i([ 26,13,0 ],'JsonName','').
struct_dt_i([ 26,13,0 ],'JsonInclude',idJsonNoProperty).
struct_dt_i([ 26,13,0 ],'JsonCollectionSerialization',idXmlCollectionWrapped).
struct_dt_i([ 26,13,0 ],isexternal,'True').
struct_dt_i([ 26,13,30 ],name,'Message').
struct_dt_i([ 26,13,30 ],namespace,'GeneXus.Messages').
struct_dt_i([ 26,93,0 ],fullname,'General\UI\SDTContextSession').
struct_dt_i([ 0,5,0 ],fullname,'Product').
struct_dt_i([ 26,13,0 ],fullname,'GeneXus\Common\Messages').
struct_dt_i([ 26,13,30 ],fullname,'GeneXus\Common\Messages.Message').
 
struct_dt_elem_i([ 26,93,0 ],1,name,'Userid').
struct_dt_elem_i([ 26,93,0 ],1,camelname,'UserId').
struct_dt_elem_i([ 26,93,0 ],1,basedon,92).
struct_dt_elem_i([ 26,93,0 ],1,length,6).
struct_dt_elem_i([ 26,93,0 ],1,decimals,0).
struct_dt_elem_i([ 26,93,0 ],1,sign,0).
struct_dt_elem_i([ 26,93,0 ],1,type,[ 4,6,0 ]).
struct_dt_elem_i([ 26,93,0 ],1,pic,'ZZZZZ9').
struct_dt_elem_i([ 26,93,0 ],1,collection,'False').
struct_dt_elem_i([ 26,93,0 ],1,'ExternalName','UserId').
struct_dt_elem_i([ 26,93,0 ],1,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,93,0 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,93,0 ],1,'XmlName','').
struct_dt_elem_i([ 26,93,0 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,93,0 ],1,soaptype,'').
struct_dt_elem_i([ 26,93,0 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,93,0 ],1,'JsonName','').
struct_dt_elem_i([ 26,93,0 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,93,0 ],2,name,'Username').
struct_dt_elem_i([ 26,93,0 ],2,camelname,'UserName').
struct_dt_elem_i([ 26,93,0 ],2,length,20).
struct_dt_elem_i([ 26,93,0 ],2,decimals,0).
struct_dt_elem_i([ 26,93,0 ],2,type,[ 13,20,0 ]).
struct_dt_elem_i([ 26,93,0 ],2,pic,'').
struct_dt_elem_i([ 26,93,0 ],2,collection,'False').
struct_dt_elem_i([ 26,93,0 ],2,'ExternalName','UserName').
struct_dt_elem_i([ 26,93,0 ],2,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,93,0 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,93,0 ],2,'XmlName','').
struct_dt_elem_i([ 26,93,0 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,93,0 ],2,soaptype,'').
struct_dt_elem_i([ 26,93,0 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,93,0 ],2,'JsonName','').
struct_dt_elem_i([ 26,93,0 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 0,5,0 ],1,name,'Productid').
struct_dt_elem_i([ 0,5,0 ],1,camelname,'ProductId').
struct_dt_elem_i([ 0,5,0 ],1,basedon,92).
struct_dt_elem_i([ 0,5,0 ],1,length,6).
struct_dt_elem_i([ 0,5,0 ],1,decimals,0).
struct_dt_elem_i([ 0,5,0 ],1,sign,0).
struct_dt_elem_i([ 0,5,0 ],1,type,[ 4,6,0 ]).
struct_dt_elem_i([ 0,5,0 ],1,pic,'ZZZZZ9').
struct_dt_elem_i([ 0,5,0 ],1,collection,'False').
struct_dt_elem_i([ 0,5,0 ],1,attributeid,'15').
struct_dt_elem_i([ 0,5,0 ],1,'ExternalName','ProductId').
struct_dt_elem_i([ 0,5,0 ],1,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],2,name,'Productcode').
struct_dt_elem_i([ 0,5,0 ],2,camelname,'ProductCode').
struct_dt_elem_i([ 0,5,0 ],2,basedon,89).
struct_dt_elem_i([ 0,5,0 ],2,length,100).
struct_dt_elem_i([ 0,5,0 ],2,decimals,0).
struct_dt_elem_i([ 0,5,0 ],2,type,[ 13,100,0 ]).
struct_dt_elem_i([ 0,5,0 ],2,pic,'').
struct_dt_elem_i([ 0,5,0 ],2,collection,'False').
struct_dt_elem_i([ 0,5,0 ],2,attributeid,'55').
struct_dt_elem_i([ 0,5,0 ],2,'ExternalName','ProductCode').
struct_dt_elem_i([ 0,5,0 ],2,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],3,name,'Productname').
struct_dt_elem_i([ 0,5,0 ],3,camelname,'ProductName').
struct_dt_elem_i([ 0,5,0 ],3,basedon,93).
struct_dt_elem_i([ 0,5,0 ],3,length,60).
struct_dt_elem_i([ 0,5,0 ],3,decimals,0).
struct_dt_elem_i([ 0,5,0 ],3,type,[ 13,60,0 ]).
struct_dt_elem_i([ 0,5,0 ],3,pic,'').
struct_dt_elem_i([ 0,5,0 ],3,collection,'False').
struct_dt_elem_i([ 0,5,0 ],3,attributeid,'16').
struct_dt_elem_i([ 0,5,0 ],3,'ExternalName','ProductName').
struct_dt_elem_i([ 0,5,0 ],3,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],4,name,'Productcostprice').
struct_dt_elem_i([ 0,5,0 ],4,camelname,'ProductCostPrice').
struct_dt_elem_i([ 0,5,0 ],4,basedon,94).
struct_dt_elem_i([ 0,5,0 ],4,length,18).
struct_dt_elem_i([ 0,5,0 ],4,decimals,2).
struct_dt_elem_i([ 0,5,0 ],4,sign,0).
struct_dt_elem_i([ 0,5,0 ],4,type,[ 4,18,2 ]).
struct_dt_elem_i([ 0,5,0 ],4,pic,'ZZZZZZZZZZZZZZ9.99').
struct_dt_elem_i([ 0,5,0 ],4,collection,'False').
struct_dt_elem_i([ 0,5,0 ],4,attributeid,'85').
struct_dt_elem_i([ 0,5,0 ],4,'ExternalName','ProductCostPrice').
struct_dt_elem_i([ 0,5,0 ],4,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],5,name,'Productretailprofit').
struct_dt_elem_i([ 0,5,0 ],5,camelname,'ProductRetailProfit').
struct_dt_elem_i([ 0,5,0 ],5,basedon,127).
struct_dt_elem_i([ 0,5,0 ],5,length,8).
struct_dt_elem_i([ 0,5,0 ],5,decimals,2).
struct_dt_elem_i([ 0,5,0 ],5,sign,1).
struct_dt_elem_i([ 0,5,0 ],5,type,[ 4,8,2 ]).
struct_dt_elem_i([ 0,5,0 ],5,pic,'ZZZZ9.99').
struct_dt_elem_i([ 0,5,0 ],5,collection,'False').
struct_dt_elem_i([ 0,5,0 ],5,attributeid,'89').
struct_dt_elem_i([ 0,5,0 ],5,'ExternalName','ProductRetailProfit').
struct_dt_elem_i([ 0,5,0 ],5,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],6,name,'Productretailprice').
struct_dt_elem_i([ 0,5,0 ],6,camelname,'ProductRetailPrice').
struct_dt_elem_i([ 0,5,0 ],6,basedon,94).
struct_dt_elem_i([ 0,5,0 ],6,length,18).
struct_dt_elem_i([ 0,5,0 ],6,decimals,2).
struct_dt_elem_i([ 0,5,0 ],6,sign,0).
struct_dt_elem_i([ 0,5,0 ],6,type,[ 4,18,2 ]).
struct_dt_elem_i([ 0,5,0 ],6,pic,'ZZZZZZZZZZZZZZ9.99').
struct_dt_elem_i([ 0,5,0 ],6,collection,'False').
struct_dt_elem_i([ 0,5,0 ],6,attributeid,'90').
struct_dt_elem_i([ 0,5,0 ],6,'ExternalName','ProductRetailPrice').
struct_dt_elem_i([ 0,5,0 ],6,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],7,name,'Productwholesaleprofit').
struct_dt_elem_i([ 0,5,0 ],7,camelname,'ProductWholesaleProfit').
struct_dt_elem_i([ 0,5,0 ],7,basedon,127).
struct_dt_elem_i([ 0,5,0 ],7,length,8).
struct_dt_elem_i([ 0,5,0 ],7,decimals,2).
struct_dt_elem_i([ 0,5,0 ],7,sign,1).
struct_dt_elem_i([ 0,5,0 ],7,type,[ 4,8,2 ]).
struct_dt_elem_i([ 0,5,0 ],7,pic,'ZZZZ9.99').
struct_dt_elem_i([ 0,5,0 ],7,collection,'False').
struct_dt_elem_i([ 0,5,0 ],7,attributeid,'87').
struct_dt_elem_i([ 0,5,0 ],7,'ExternalName','ProductWholesaleProfit').
struct_dt_elem_i([ 0,5,0 ],7,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],8,name,'Productwholesaleprice').
struct_dt_elem_i([ 0,5,0 ],8,camelname,'ProductWholesalePrice').
struct_dt_elem_i([ 0,5,0 ],8,basedon,94).
struct_dt_elem_i([ 0,5,0 ],8,length,18).
struct_dt_elem_i([ 0,5,0 ],8,decimals,2).
struct_dt_elem_i([ 0,5,0 ],8,sign,0).
struct_dt_elem_i([ 0,5,0 ],8,type,[ 4,18,2 ]).
struct_dt_elem_i([ 0,5,0 ],8,pic,'ZZZZZZZZZZZZZZ9.99').
struct_dt_elem_i([ 0,5,0 ],8,collection,'False').
struct_dt_elem_i([ 0,5,0 ],8,attributeid,'88').
struct_dt_elem_i([ 0,5,0 ],8,'ExternalName','ProductWholesalePrice').
struct_dt_elem_i([ 0,5,0 ],8,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],9,name,'Brandid').
struct_dt_elem_i([ 0,5,0 ],9,camelname,'BrandId').
struct_dt_elem_i([ 0,5,0 ],9,basedon,92).
struct_dt_elem_i([ 0,5,0 ],9,length,6).
struct_dt_elem_i([ 0,5,0 ],9,decimals,0).
struct_dt_elem_i([ 0,5,0 ],9,sign,0).
struct_dt_elem_i([ 0,5,0 ],9,type,[ 4,6,0 ]).
struct_dt_elem_i([ 0,5,0 ],9,pic,'ZZZZZ9').
struct_dt_elem_i([ 0,5,0 ],9,collection,'False').
struct_dt_elem_i([ 0,5,0 ],9,attributeid,'1').
struct_dt_elem_i([ 0,5,0 ],9,'ExternalName','BrandId').
struct_dt_elem_i([ 0,5,0 ],9,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],10,name,'Brandname').
struct_dt_elem_i([ 0,5,0 ],10,camelname,'BrandName').
struct_dt_elem_i([ 0,5,0 ],10,basedon,93).
struct_dt_elem_i([ 0,5,0 ],10,length,60).
struct_dt_elem_i([ 0,5,0 ],10,decimals,0).
struct_dt_elem_i([ 0,5,0 ],10,type,[ 13,60,0 ]).
struct_dt_elem_i([ 0,5,0 ],10,pic,'').
struct_dt_elem_i([ 0,5,0 ],10,collection,'False').
struct_dt_elem_i([ 0,5,0 ],10,attributeid,'2').
struct_dt_elem_i([ 0,5,0 ],10,'ExternalName','BrandName').
struct_dt_elem_i([ 0,5,0 ],10,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],11,name,'Supplierid').
struct_dt_elem_i([ 0,5,0 ],11,camelname,'SupplierId').
struct_dt_elem_i([ 0,5,0 ],11,basedon,92).
struct_dt_elem_i([ 0,5,0 ],11,length,6).
struct_dt_elem_i([ 0,5,0 ],11,decimals,0).
struct_dt_elem_i([ 0,5,0 ],11,sign,0).
struct_dt_elem_i([ 0,5,0 ],11,type,[ 4,6,0 ]).
struct_dt_elem_i([ 0,5,0 ],11,pic,'ZZZZZ9').
struct_dt_elem_i([ 0,5,0 ],11,collection,'False').
struct_dt_elem_i([ 0,5,0 ],11,attributeid,'4').
struct_dt_elem_i([ 0,5,0 ],11,'ExternalName','SupplierId').
struct_dt_elem_i([ 0,5,0 ],11,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],12,name,'Suppliername').
struct_dt_elem_i([ 0,5,0 ],12,camelname,'SupplierName').
struct_dt_elem_i([ 0,5,0 ],12,basedon,93).
struct_dt_elem_i([ 0,5,0 ],12,length,60).
struct_dt_elem_i([ 0,5,0 ],12,decimals,0).
struct_dt_elem_i([ 0,5,0 ],12,type,[ 13,60,0 ]).
struct_dt_elem_i([ 0,5,0 ],12,pic,'').
struct_dt_elem_i([ 0,5,0 ],12,collection,'False').
struct_dt_elem_i([ 0,5,0 ],12,attributeid,'5').
struct_dt_elem_i([ 0,5,0 ],12,'ExternalName','SupplierName').
struct_dt_elem_i([ 0,5,0 ],12,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],13,name,'Sectorid').
struct_dt_elem_i([ 0,5,0 ],13,camelname,'SectorId').
struct_dt_elem_i([ 0,5,0 ],13,basedon,92).
struct_dt_elem_i([ 0,5,0 ],13,length,6).
struct_dt_elem_i([ 0,5,0 ],13,decimals,0).
struct_dt_elem_i([ 0,5,0 ],13,sign,0).
struct_dt_elem_i([ 0,5,0 ],13,type,[ 4,6,0 ]).
struct_dt_elem_i([ 0,5,0 ],13,pic,'ZZZZZ9').
struct_dt_elem_i([ 0,5,0 ],13,collection,'False').
struct_dt_elem_i([ 0,5,0 ],13,attributeid,'9').
struct_dt_elem_i([ 0,5,0 ],13,'ExternalName','SectorId').
struct_dt_elem_i([ 0,5,0 ],13,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],14,name,'Sectorname').
struct_dt_elem_i([ 0,5,0 ],14,camelname,'SectorName').
struct_dt_elem_i([ 0,5,0 ],14,basedon,93).
struct_dt_elem_i([ 0,5,0 ],14,length,60).
struct_dt_elem_i([ 0,5,0 ],14,decimals,0).
struct_dt_elem_i([ 0,5,0 ],14,type,[ 13,60,0 ]).
struct_dt_elem_i([ 0,5,0 ],14,pic,'').
struct_dt_elem_i([ 0,5,0 ],14,collection,'False').
struct_dt_elem_i([ 0,5,0 ],14,attributeid,'10').
struct_dt_elem_i([ 0,5,0 ],14,'ExternalName','SectorName').
struct_dt_elem_i([ 0,5,0 ],14,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],15,name,'Productstock').
struct_dt_elem_i([ 0,5,0 ],15,camelname,'ProductStock').
struct_dt_elem_i([ 0,5,0 ],15,basedon,97).
struct_dt_elem_i([ 0,5,0 ],15,length,6).
struct_dt_elem_i([ 0,5,0 ],15,decimals,0).
struct_dt_elem_i([ 0,5,0 ],15,sign,0).
struct_dt_elem_i([ 0,5,0 ],15,type,[ 4,6,0 ]).
struct_dt_elem_i([ 0,5,0 ],15,pic,'ZZZZZ9').
struct_dt_elem_i([ 0,5,0 ],15,collection,'False').
struct_dt_elem_i([ 0,5,0 ],15,attributeid,'17').
struct_dt_elem_i([ 0,5,0 ],15,'ExternalName','ProductStock').
struct_dt_elem_i([ 0,5,0 ],15,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],16,name,'Productminiumstock').
struct_dt_elem_i([ 0,5,0 ],16,camelname,'ProductMiniumStock').
struct_dt_elem_i([ 0,5,0 ],16,basedon,97).
struct_dt_elem_i([ 0,5,0 ],16,length,6).
struct_dt_elem_i([ 0,5,0 ],16,decimals,0).
struct_dt_elem_i([ 0,5,0 ],16,sign,0).
struct_dt_elem_i([ 0,5,0 ],16,type,[ 4,6,0 ]).
struct_dt_elem_i([ 0,5,0 ],16,pic,'ZZZZZ9').
struct_dt_elem_i([ 0,5,0 ],16,collection,'False').
struct_dt_elem_i([ 0,5,0 ],16,attributeid,'69').
struct_dt_elem_i([ 0,5,0 ],16,'ExternalName','ProductMiniumStock').
struct_dt_elem_i([ 0,5,0 ],16,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],17,name,'Productdescription').
struct_dt_elem_i([ 0,5,0 ],17,camelname,'ProductDescription').
struct_dt_elem_i([ 0,5,0 ],17,basedon,88).
struct_dt_elem_i([ 0,5,0 ],17,length,200).
struct_dt_elem_i([ 0,5,0 ],17,decimals,0).
struct_dt_elem_i([ 0,5,0 ],17,type,[ 13,200,0 ]).
struct_dt_elem_i([ 0,5,0 ],17,pic,'').
struct_dt_elem_i([ 0,5,0 ],17,collection,'False').
struct_dt_elem_i([ 0,5,0 ],17,attributeid,'19').
struct_dt_elem_i([ 0,5,0 ],17,'ExternalName','ProductDescription').
struct_dt_elem_i([ 0,5,0 ],17,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],18,name,'Productcreateddate').
struct_dt_elem_i([ 0,5,0 ],18,camelname,'ProductCreatedDate').
struct_dt_elem_i([ 0,5,0 ],18,basedon,129).
struct_dt_elem_i([ 0,5,0 ],18,length,8).
struct_dt_elem_i([ 0,5,0 ],18,decimals,0).
struct_dt_elem_i([ 0,5,0 ],18,type,[ 6,8,0 ]).
struct_dt_elem_i([ 0,5,0 ],18,pic,'99/99/9999').
struct_dt_elem_i([ 0,5,0 ],18,collection,'False').
struct_dt_elem_i([ 0,5,0 ],18,attributeid,'28').
struct_dt_elem_i([ 0,5,0 ],18,'ExternalName','ProductCreatedDate').
struct_dt_elem_i([ 0,5,0 ],18,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],19,name,'Productmodifieddate').
struct_dt_elem_i([ 0,5,0 ],19,camelname,'ProductModifiedDate').
struct_dt_elem_i([ 0,5,0 ],19,basedon,129).
struct_dt_elem_i([ 0,5,0 ],19,length,8).
struct_dt_elem_i([ 0,5,0 ],19,decimals,0).
struct_dt_elem_i([ 0,5,0 ],19,type,[ 6,8,0 ]).
struct_dt_elem_i([ 0,5,0 ],19,pic,'99/99/9999').
struct_dt_elem_i([ 0,5,0 ],19,collection,'False').
struct_dt_elem_i([ 0,5,0 ],19,attributeid,'29').
struct_dt_elem_i([ 0,5,0 ],19,'ExternalName','ProductModifiedDate').
struct_dt_elem_i([ 0,5,0 ],19,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],20,name,'Productminiumquantitywholesale').
struct_dt_elem_i([ 0,5,0 ],20,camelname,'ProductMiniumQuantityWholesale').
struct_dt_elem_i([ 0,5,0 ],20,length,4).
struct_dt_elem_i([ 0,5,0 ],20,decimals,0).
struct_dt_elem_i([ 0,5,0 ],20,sign,0).
struct_dt_elem_i([ 0,5,0 ],20,type,[ 4,4,0 ]).
struct_dt_elem_i([ 0,5,0 ],20,pic,'ZZZ9').
struct_dt_elem_i([ 0,5,0 ],20,collection,'False').
struct_dt_elem_i([ 0,5,0 ],20,attributeid,'93').
struct_dt_elem_i([ 0,5,0 ],20,'ExternalName','ProductMiniumQuantityWholesale').
struct_dt_elem_i([ 0,5,0 ],20,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 0,5,0 ],21,name,'Productactive').
struct_dt_elem_i([ 0,5,0 ],21,camelname,'ProductActive').
struct_dt_elem_i([ 0,5,0 ],21,length,4).
struct_dt_elem_i([ 0,5,0 ],21,decimals,0).
struct_dt_elem_i([ 0,5,0 ],21,type,[ 15,4,0 ]).
struct_dt_elem_i([ 0,5,0 ],21,pic,'').
struct_dt_elem_i([ 0,5,0 ],21,collection,'False').
struct_dt_elem_i([ 0,5,0 ],21,attributeid,'110').
struct_dt_elem_i([ 0,5,0 ],21,'ExternalName','ProductActive').
struct_dt_elem_i([ 0,5,0 ],21,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,13,30 ],1,name,'Id').
struct_dt_elem_i([ 26,13,30 ],1,camelname,'Id').
struct_dt_elem_i([ 26,13,30 ],1,length,128).
struct_dt_elem_i([ 26,13,30 ],1,decimals,0).
struct_dt_elem_i([ 26,13,30 ],1,type,[ 13,128,0 ]).
struct_dt_elem_i([ 26,13,30 ],1,pic,'').
struct_dt_elem_i([ 26,13,30 ],1,collection,'False').
struct_dt_elem_i([ 26,13,30 ],1,'ExternalName','Id').
struct_dt_elem_i([ 26,13,30 ],1,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,13,30 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,13,30 ],1,'XmlName','').
struct_dt_elem_i([ 26,13,30 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,13,30 ],1,soaptype,'').
struct_dt_elem_i([ 26,13,30 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,13,30 ],1,'JsonName','').
struct_dt_elem_i([ 26,13,30 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,13,30 ],2,name,'Type').
struct_dt_elem_i([ 26,13,30 ],2,camelname,'Type').
struct_dt_elem_i([ 26,13,30 ],2,basedon,51).
struct_dt_elem_i([ 26,13,30 ],2,length,2).
struct_dt_elem_i([ 26,13,30 ],2,decimals,0).
struct_dt_elem_i([ 26,13,30 ],2,sign,0).
struct_dt_elem_i([ 26,13,30 ],2,type,[ 4,2,0 ]).
struct_dt_elem_i([ 26,13,30 ],2,pic,'Z9').
struct_dt_elem_i([ 26,13,30 ],2,collection,'False').
struct_dt_elem_i([ 26,13,30 ],2,'ExternalName','Type').
struct_dt_elem_i([ 26,13,30 ],2,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,13,30 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,13,30 ],2,'XmlName','').
struct_dt_elem_i([ 26,13,30 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,13,30 ],2,soaptype,'').
struct_dt_elem_i([ 26,13,30 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,13,30 ],2,'JsonName','').
struct_dt_elem_i([ 26,13,30 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,13,30 ],3,name,'Description').
struct_dt_elem_i([ 26,13,30 ],3,camelname,'Description').
struct_dt_elem_i([ 26,13,30 ],3,length,256).
struct_dt_elem_i([ 26,13,30 ],3,decimals,0).
struct_dt_elem_i([ 26,13,30 ],3,type,[ 13,256,0 ]).
struct_dt_elem_i([ 26,13,30 ],3,pic,'').
struct_dt_elem_i([ 26,13,30 ],3,collection,'False').
struct_dt_elem_i([ 26,13,30 ],3,'ExternalName','Description').
struct_dt_elem_i([ 26,13,30 ],3,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,13,30 ],3,'XmlType','Element').
struct_dt_elem_i([ 26,13,30 ],3,'XmlName','').
struct_dt_elem_i([ 26,13,30 ],3,'XmlNamespace','').
struct_dt_elem_i([ 26,13,30 ],3,soaptype,'').
struct_dt_elem_i([ 26,13,30 ],3,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,13,30 ],3,'JsonName','').
struct_dt_elem_i([ 26,13,30 ],3,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 0,5,0 ],2,pic,'ZZZZ9.99').
struct_dt_elem_i([ 0,5,0 ],3,pic,'ZZZ9').
struct_dt_elem_i([ 0,5,0 ],5,pic,'ZZZ9').
struct_dt_elem_i([ 0,5,0 ],7,pic,'ZZZ9').
struct_dt_elem_i([ 0,5,0 ],10,pic,'ZZZ9').
struct_dt_elem_i([ 0,5,0 ],12,pic,'ZZZ9').
struct_dt_elem_i([ 0,5,0 ],14,pic,'ZZZ9').
struct_dt_elem_i([ 0,5,0 ],17,pic,'ZZZZZZZZZZZZZZ9.99').
struct_dt_elem_i([ 0,5,0 ],18,pic,'ZZZZ9.99').
struct_dt_elem_i([ 0,5,0 ],19,pic,'ZZZZ9.99').
 
 
 
 
 
 
pgm_parm_i(proc,37,'AINVOICEREGISTER',[ [ int,6,0,0 ],[ boolean,4,0,0 ] ],[ [ 'InvoiceId',in,[] ],[ 'AllOk',out,[] ] ]).
 
pgm_callprotocol_i(proc,0,'INVOICEREGISTER','INTERNAL','').
pgm_callprotocol_i(proc,37,'AINVOICEREGISTER','HTTP','Unsecure').
 
 
pgm_main_info_i(proc,37,'INVOICEREGISTER',[ 41,'AINVOICEREGISTER','Invoice Register','','','','HTTP' ]).
 
 
module_info_i('GeneXus\Common','CSHARP_NAME_SPACE','GeneXus.Core').
module_info_i('GeneXus\Common','AssemblyName','GeneXus.dll').
 
 
 
 
 
 
 
 
 
 
