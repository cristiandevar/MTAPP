spec_i([ web,44,'Sector Product WC','SectorProductWC',0,eng,'18_0_2-169539' ]).
 
struct_i(2,1,[ 'Pgmname' ],[]).
 
level_i(2,[ 5,[ [ 5,many ],[ 1,one ],[ 2,one ] ],[],[],[ [ [ 5,1,2 ],[ 15,1,4,9,110,29,19,28,5,2,93,69,17,16,55,89,90,85,87,88 ] ] ],[ [ [ 5,1,2 ],[] ] ],[ 9 ],'IPRODUCT2',[ 5,[ [ [],'Sectorid',9 ] ] ],[] ]).
 
tw_i(2,[ [ 1,[ [ 5,1,1 ] ] ],[ 2,[ [ 5,4,4 ] ] ] ]).
 
lwi_i(2,[ [] ]).
 
 
 
level_option_i(2,server_paging,[ y,[] ]).
 
ta_i(2,[ [ [ 5,15 ],[ 5,1 ],[ 5,4 ],[ 5,9 ],[ 5,110 ],[ 5,29 ],[ 5,19 ],[ 5,28 ],[ 2,5 ],[ 1,2 ],[ 5,93 ],[ 5,69 ],[ 5,17 ],[ 5,16 ],[ 5,55 ],[ 5,89 ],[ 5,85 ],[ 5,87 ] ] ]).
 
las_i(2,[ [ 'Sectorid','State',15,1,4,9,110,29,19,28,5,2,93,69,17,16,55,89,90,85,87,88 ] ]).
 
lac_i(2,[ [ 'State' ] ]).
 
 
lits_i('',5,10).
 
cls_i([ 0,0 ],[ 5,645 ]).
 
pos_i(55,[ 1,2,0 ]).
pos_i(16,[ 1,2,101 ]).
pos_i(17,[ 1,2,162 ]).
pos_i(69,[ 1,2,169 ]).
pos_i(85,[ 1,2,176 ]).
pos_i(90,[ 1,2,195 ]).
pos_i(88,[ 1,2,214 ]).
pos_i(93,[ 1,2,233 ]).
pos_i(2,[ 1,2,238 ]).
pos_i(5,[ 1,2,299 ]).
pos_i('State',[ 1,2,360 ]).
pos_i(28,[ 1,2,401 ]).
pos_i(19,[ 1,2,412 ]).
pos_i(29,[ 1,2,613 ]).
pos_i(87,[ 1,2,624 ]).
pos_i(89,[ 1,2,633 ]).
pos_i(110,[ 1,2,642 ]).
pos_i(9,[ 0,0,0 ]).
 
repeat_i(2,[ 1,2,[ 55,16,17,69,85,90,88,93,2,5,'State',28,19,29,87,89,110 ],[ 'State' ] ]).
 
default_i(e('Pgmname',2,2,'"SectorProductWC"')).
 
rule_i(0,datastore(1,'DS_LAST_CHANGE','')).
rule_i(0,datastore(1,'LOCK_RETRY','10')).
rule_i(0,datastore(1,'WAIT_RECORD','0')).
rule_i(0,datastore(1,'ISOLATION_LEVEL','CR')).
rule_i(0,datastore(1,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(1,'COMMENT_ON','No')).
rule_i(0,datastore(1,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(1,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(1,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(1,'CS_SCHEMA','')).
rule_i(0,datastore(1,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(1,'JRN400','QSQJRN')).
rule_i(0,datastore(1,'CREATE_SAVF','Yes')).
rule_i(0,datastore(1,'PGMLIB','')).
rule_i(0,datastore(1,'DTALIB','')).
rule_i(0,datastore(1,'RecycleRWMin','30')).
rule_i(0,datastore(1,'RecycleRWType','1')).
rule_i(0,datastore(1,'RecycleRW','-1')).
rule_i(0,datastore(1,'POOL_STARTUP','No')).
rule_i(0,datastore(1,'POOLSIZE_RW','10')).
rule_i(0,datastore(1,'UnlimitedRWPool','-1')).
rule_i(0,datastore(1,'PoolRWEnabled','-1')).
rule_i(0,datastore(1,'CS_RPCPGML','')).
rule_i(0,datastore(1,'JDBC_DATASOURCE','')).
rule_i(0,datastore(1,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(1,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(1,'USER_PASSWORD','')).
rule_i(0,datastore(1,'USER_ID','')).
rule_i(0,datastore(1,'TRUSTED_CONNECTION','Yes')).
rule_i(0,datastore(1,'CS_CONNECT','First')).
rule_i(0,datastore(1,'DBMS_PORT','')).
rule_i(0,datastore(1,'CS_SERVER','CRISTIAN\SQLEXPRESS')).
rule_i(0,datastore(1,'CS_DBNAME',mtaKB2)).
rule_i(0,datastore(1,'CS_FLEDSNAME','')).
rule_i(0,datastore(1,'CS_DRVNAME','sql server')).
rule_i(0,datastore(1,'CS_DSNAME','')).
rule_i(0,datastore(1,'DB_URL','')).
rule_i(0,datastore(1,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(1,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(1,'JDBC_DRIVER','com.microsoft.sqlserver.jdbc.SQLServerDriver')).
rule_i(0,datastore(1,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(1,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(1,'MAIN_DS','-1')).
rule_i(0,datastore(1,'REORG_GEN','8')).
rule_i(0,datastore(1,'HelpKeyword','20')).
rule_i(0,datastore(1,'DBMS',12)).
rule_i(0,datastore(1,'NAME','Default')).
rule_i(0,prop(idNULLS_BEHAVIOR,idNB_Current)).
rule_i(0,prop('PWFCallable','0')).
rule_i(0,prop('ObjectVisibility','Public')).
rule_i(0,prop('FullyQualifiedName','SectorProductWC')).
rule_i(0,prop('GenerateObject','-1')).
rule_i(0,prop('Hint_firstrows','UMPV')).
rule_i(0,prop('JOIN_TYPE','UMPV')).
rule_i(0,prop('DBMS_JOINS','UMPV')).
rule_i(0,prop('REFRESH_TOUT_TRIG','ALL')).
rule_i(0,prop('REFRESH_TOUT','')).
rule_i(0,prop('KEY_ENTER','UMPV')).
rule_i(0,prop('KEY_CANCEL','UMPV')).
rule_i(0,prop('KEY_REFRESH','UMPV')).
rule_i(0,prop('KEY_HELP','UMPV')).
rule_i(0,prop('ASSIGNED_FNC_KEYS','UMPV')).
rule_i(0,prop('WEB_SECURITY_LEVEL','High')).
rule_i(0,prop('HTTP_PROTOCOL','Unsecure')).
rule_i(0,prop('USE_ENCRYPTION','NO')).
rule_i(0,prop('FIRST_WD_DATEPICKER','UMPV')).
rule_i(0,prop('WNUM_DATEPICKER','UMPV')).
rule_i(0,prop(idUSE_WEB_DATEPICKER,'UMPV')).
rule_i(0,prop('WebUX','SMOOTH')).
rule_i(0,prop('STD_FUNC_OBJECT','Yes')).
rule_i(0,prop('SPC_WARNINGS_DISABLED','spc0096 spc0107 spc0142')).
rule_i(0,prop('WebApplication',idDefault)).
rule_i(0,prop('COMPRESS_HTML','UMPV')).
rule_i(0,prop('AUTO_REFRESH','VARS_CHANGE')).
rule_i(0,prop('CACHE_EXPIRES','')).
rule_i(0,prop('WEB_AUTO_FOCUS','UMPV')).
rule_i(0,prop('OnSessionTimeout','Ignore')).
rule_i(0,prop('OBJECT_METADATA','')).
rule_i(0,prop('IsMain','0')).
rule_i(0,prop(sessiontype,'RW')).
rule_i(0,prop('SHOWMASTERPAGE_POPUP','0')).
rule_i(0,prop('URLAccess','No')).
rule_i(0,prop('WEB_COMP','Yes')).
rule_i(0,prop('Theme',o(102,mtaKB))).
rule_i(0,prop('ObjDesc','Sector Product WC')).
rule_i(0,prop('ObjName','SectorProductWC')).
rule_i(0,maingen(41)).
rule_i(0,parm([ 'Sectorid' ],[])).
rule_i(0,parmio([ [ 'Sectorid',in ] ])).
rule_i(0,rule([ a(22,[ '''DoInsert''','''DoInsert''','' ]) ],[],[],[])).
rule_i(0,rule([ a(22,[ '''DoExport''','''DoExport''','' ]) ],[],[],[])).
 
a_i(1,2,f,90,[],[ [],[ t('iif(',1),t(89,2),t(<>,10),t('0',3),t(',',7),t('udp(',1),t(90,3),t(0,3),t(85,2),t(*,6),t('(',0),t('1',3),t(+,5),t(89,2),t(/,6),t('100',3),t(')',4),t(')',4),t(',',7),t('udp(',1),t(90,3),t(1,3),t(85,2),t(')',4),t(')',4),t(';',18) ] ]).
a_i(2,2,f,88,[],[ [],[ t('iif(',1),t(87,2),t(<>,10),t('0',3),t(',',7),t('udp(',1),t(88,3),t(0,3),t(85,2),t(*,6),t('(',0),t('1',3),t(+,5),t(87,2),t(/,6),t('100',3),t(')',4),t(')',4),t(',',7),t('udp(',1),t(88,3),t(1,3),t(85,2),t(')',4),t(')',4),t(';',18) ] ]).
a_i(3,1,f,'Pgmname',[],[ [],[ t('"SectorProductWC"',3) ] ]).
a_i(4,1,f,'Err',[],[ [],[ t('0',3) ] ]).
a_i(5,2,t,5,[],[ [ [ [],'Sectorid',9 ] ],'IPRODUCT2',[] ]).
a_i(6,2,r,1,[],[ [ [ 5,1,1 ] ],'IBRAND',[] ]).
a_i(7,2,r,2,[],[ [ [ 5,4,4 ] ],'ISUPPLIER',[] ]).
a_i(8,1,f,[ t('&State',23),t('Enabled',3) ],[],[ [],[ t(0,3),t(';',18) ] ]).
 
v_i(f,i,1,89).
v_i(f,i,1,85).
v_i(f,o,1,90).
v_i(f,i,2,87).
v_i(f,i,2,85).
v_i(f,o,2,88).
v_i(f,i,3,[]).
v_i(f,o,3,'Pgmname').
v_i(f,i,4,[]).
v_i(f,o,4,'Err').
v_i(t,i,5,'Sectorid').
v_i(t,o,5,15).
v_i(t,o,5,1).
v_i(t,o,5,4).
v_i(t,o,5,9).
v_i(t,o,5,110).
v_i(t,o,5,29).
v_i(t,o,5,19).
v_i(t,o,5,28).
v_i(t,o,5,93).
v_i(t,o,5,69).
v_i(t,o,5,17).
v_i(t,o,5,16).
v_i(t,o,5,55).
v_i(t,o,5,89).
v_i(t,o,5,85).
v_i(t,o,5,87).
v_i(r,i,6,1).
v_i(r,o,6,2).
v_i(r,i,7,4).
v_i(r,o,7,5).
v_i(f,i,8,[]).
v_i(f,o,8,[ t('&State',23),t('Enabled',3) ]).
 
 
 
 
 
 
attri_i(15,[ 'ProductId',int,6,0,'ZZZZZ9',0,'Product Id','',0 ]).
attri_i(1,[ 'BrandId',int,6,0,'ZZZZZ9',0,'Brand Id','',0 ]).
attri_i(4,[ 'SupplierId',int,6,0,'ZZZZZ9',0,'Supplier Id','',0 ]).
attri_i(9,[ 'SectorId',int,6,0,'ZZZZZ9',0,'Sector Id','',0 ]).
attri_i(110,[ 'ProductActive',boolean,4,0,'',0,'Product Active','',0 ]).
attri_i(89,[ 'ProductRetailProfit',int,8,2,'ZZZZ9.99',1,'Product Retail Profit','',0 ]).
attri_i(87,[ 'ProductWholesaleProfit',int,8,2,'ZZZZ9.99',1,'Product Wholesale Profit','',0 ]).
attri_i(29,[ 'ProductModifiedDate',date,8,0,'99/99/9999',0,'Product Modified Date','',0 ]).
attri_i(19,[ 'ProductDescription',svchar,200,0,'',0,'Product Description','',0 ]).
attri_i(28,[ 'ProductCreatedDate',date,8,0,'99/99/9999',0,'Product Created Date','',0 ]).
attri_i(5,[ 'SupplierName',svchar,60,0,'',0,'Supplier Name','',0 ]).
attri_i(2,[ 'BrandName',svchar,60,0,'',0,'Brand Name','',0 ]).
attri_i(93,[ 'ProductMiniumQuantityWholesale',int,4,0,'ZZZ9',0,'Product Minium Quantity Wholesale','',0 ]).
attri_i(88,[ 'ProductWholesalePrice',int,18,2,'ZZZZZZZZZZZZZZ9.99',0,'Product Wholesale Price','',0 ]).
attri_i(90,[ 'ProductRetailPrice',int,18,2,'ZZZZZZZZZZZZZZ9.99',0,'Product Retail Price','',0 ]).
attri_i(85,[ 'ProductCostPrice',int,18,2,'ZZZZZZZZZZZZZZ9.99',0,'Product Cost Price','',0 ]).
attri_i(69,[ 'ProductMiniumStock',int,6,0,'ZZZZZ9',0,'Product Minium Stock','',0 ]).
attri_i(17,[ 'ProductStock',int,6,0,'ZZZZZ9',0,'Product Stock','',0 ]).
attri_i(16,[ 'ProductName',svchar,60,0,'',0,'Product Name','',0 ]).
attri_i(55,[ 'ProductCode',svchar,100,0,'',0,'Product Code','',0 ]).
attri_i('Pgmname',[ 'Pgmname',char,129,0,'',1,'Program name','',20 ]).
attri_i('Errmsg',[ 'Gx_emsg',char,70,0,'',1,'Error text','',19 ]).
attri_i('Err',[ 'Gx_err',int,3,0,'ZZ9',1,'Error code','',18 ]).
attri_i('State',[ 'State',svchar,40,0,'',0,'State','',17 ]).
attri_i('Advanced_label_template',[ 'ADVANCED_LABEL_TEMPLATE',char,20,0,'',0,'ADVANCED_LABEL_TEMPLATE','',14 ]).
attri_i('Errormessage',[ 'ErrorMessage',svchar,512,0,'',0,'Error Message','',16 ]).
attri_i('Excelfilename',[ 'ExcelFilename',svchar,1000,0,'',0,'Excel Filename','',15 ]).
attri_i('Trncontextatt',[ 'TrnContextAtt',o('General\UI\TransactionContext.Attribute'),0,0,'',0,'Trn Context Att','',11 ]).
attri_i('Trncontext',[ 'TrnContext',o('General\UI\TransactionContext'),0,0,'',0,'Trn Context','',10 ]).
attri_i('Gridstate',[ 'GridState',o('GeneXus\Common\GridState'),0,0,'',0,'Grid State','',9 ]).
attri_i('Httprequest',[ 'HTTPRequest',o(httprequest),4,0,'',0,'HTTPRequest','',8 ]).
attri_i('Session',[ 'Session',o(websession),4,0,'',0,'Session','',7 ]).
attri_i('Sectorid',[ 'SectorId',int,6,0,'ZZZZZ9',0,'Sector Id','',6 ]).
attri_i('Isauthorized',[ 'IsAuthorized',boolean,4,0,'',0,'Is Authorized','',5 ]).
 
table_i(1,[ 'Brand',[ 1,2 ],'Brand','Brand' ]).
table_i(2,[ 'Supplier',[ 4,5 ],'Supplier','Supplier' ]).
table_i(5,[ 'Product',[ 15,16,17,19,1,9,4,28,29,55,69,85,87,89,93,110 ],'Product','Product' ]).
 
index_i(5,[ 'IPRODUCT',u,[ 15 ],'IProduct' ]).
index_i(5,[ 'IPRODUCT2',d,[ 9 ],'IProduct2' ]).
index_i(1,[ 'IBRAND',u,[ 1 ],'IBrand' ]).
index_i(2,[ 'ISUPPLIER',u,[ 4 ],'ISupplier' ]).
 
 
 
function_i(2,88,yes,udp,o(1,'RoundValue'),[ 85 ],1,88,[ [ t(85,2) ] ]).
function_i(2,88,yes,udp,o(1,'RoundValue'),[ 85,87 ],0,88,[ [ t(85,2),t(*,6),t('(',0),t('1',3),t(+,5),t(87,2),t(/,6),t('100',3),t(')',4) ] ]).
function_i(2,90,yes,udp,o(1,'RoundValue'),[ 85 ],1,90,[ [ t(85,2) ] ]).
function_i(2,90,yes,udp,o(1,'RoundValue'),[ 85,89 ],0,90,[ [ t(85,2),t(*,6),t('(',0),t('1',3),t(+,5),t(89,2),t(/,6),t('100',3),t(')',4) ] ]).
function_i(2,'State',yes,udp,o(1,'ProductGetState'),[ 15 ],37,'State',[ [ t(15,2) ] ]).
 
 
 
 
 
 
 
 
sql_no_eval_hor_i(2,88).
sql_no_eval_hor_i(2,90).
 
 
 
 
 
start_i(2,0,0,[ [ [ 9,23,'Sectorid',= ] ],many ]).
 
end_i(2,0,0,[ [ [ t(9,2),t(=,10),t('Sectorid',23) ] ] ]).
 
 
 
 
 
enum_value_i(6,43,'"INS"','Insert','"Insert"',[ none ]).
enum_value_i(6,43,'"UPD"','Update','"Update"',[ none ]).
enum_value_i(6,43,'"DLT"','Delete','"Delete"',[ none ]).
enum_value_i(6,43,'"DSP"','Display','"Display"',[ none ]).
 
enum_value_info_i(6,43,'GeneXus\TrnMode').
 
enum_type_i(6,43,char,3,0).
 
dom_info_i(89,[ 'GeneXusUnanimo\Code' ]).
dom_info_i(93,[ 'Name' ]).
dom_info_i(97,[ 'Stock' ]).
dom_info_i(94,[ 'Price' ]).
dom_info_i(129,[ 'MyDate' ]).
dom_info_i(88,[ 'GeneXusUnanimo\Description' ]).
dom_info_i(127,[ 'Percentage' ]).
dom_info_i(92,[ 'Id' ]).
dom_info_i(49,[ 'GeneXus\Phone' ]).
dom_info_i(46,[ 'GeneXus\Email' ]).
dom_info_i(33,[ 'GeneXus\Url' ]).
 
 
break_i(2,nvg,1,[],[ [ 55,16,17,69,85,90,88,93,2,5,28,19,29,87,89,110,9,4,1,15 ],[],[] ]).
 
b_group_i(2,1,lit,0,1,1).
b_group_i(2,2,lit,0,2,21).
b_group_i(2,3,lit,0,22,40).
b_group_i(2,4,lit,0,41,45).
b_group_i(2,5,lit,0,46,56).
b_group_i(2,6,lit,0,57,0).
 
b_line_i(1,2,1,cmd,1,[ t('',146,1,0),t('Start',3,1,7) ]).
b_line_i(2,2,2,cmd,1,[ t('',109,2,0),t('.NOT.',8,1,5),t('udp(',1,2,24),t(o(1,'HasPermission'),28,2,11),t(',',7,1,0),t('''product view''',3,2,25),t(')',4,1,0) ]).
b_line_i(3,2,2,cmd,1,[ t('',104,3,0),t(o(13,'General\Security\NotAuthorized'),28,1,3),t('Pgmname',23,1,17) ]).
b_line_i(4,2,2,cmd,1,[ t('',111,4,0) ]).
b_line_i(6,2,2,cmd,1,[ t('',109,6,0),t('.NOT.',8,1,5),t('udp(',1,6,23),t(o(1,'General\Security\IsAuthorized'),28,6,11),t(',',7,1,0),t('Pgmname',23,1,24),t(')',4,1,0) ]).
b_line_i(7,2,2,cmd,1,[ t('',104,7,0),t(o(13,'General\Security\NotAuthorized'),28,1,3),t('Pgmname',23,1,17) ]).
b_line_i(8,2,2,cmd,1,[ t('',111,8,0) ]).
b_line_i(10,2,2,cmd,1,[ t('',109,10,0),t('.NOT.',8,1,5),t('udp(',1,10,24),t(o(1,'HasPermission'),28,10,11),t(',',7,1,0),t('''product insert''',3,10,25),t(')',4,1,0) ]).
b_line_i(11,2,2,cmd,1,[ t('',107,11,0),t([ t('Btninsert',3,1,0),t('Visible',3,1,0) ],29,1,0),t(=,10,1,0),t('FALSE',41,1,0) ]).
b_line_i(12,2,2,cmd,1,[ t('',107,12,0),t([ t('Btninsert',3,1,0),t('Enabled',3,1,0) ],29,1,0),t(=,10,1,0),t('FALSE',41,1,0) ]).
b_line_i(13,2,2,cmd,1,[ t('',111,13,0) ]).
b_line_i(15,2,2,cmd,1,[ t('',107,15,0),t([ t('Grid',3,1,0),t('Rows',3,1,0) ],29,1,0),t(=,10,1,0),t('10',3,1,0) ]).
b_line_i(16,2,2,cmd,1,[ t('',107,16,0),t([ t(9,2,1,0),t('Visible',3,1,0) ],29,1,0),t(=,10,1,0),t('FALSE',41,1,0) ]).
b_line_i(18,2,2,cmd,1,[ t('',145,18,0),t('''PREPARETRANSACTION''',3,18,5) ]).
b_line_i(19,2,2,cmd,1,[ t('',147,19,0) ]).
b_line_i(21,2,2,cmd,1,[ t('',146,21,0),t([ t('Grid',3,21,7),t('Load',3,21,12) ],29,21,12) ]).
b_line_i(25,2,3,cmd,1,[ t('',109,25,0),t('.NOT.',8,1,5),t('udp(',1,25,24),t(o(1,'HasPermission'),28,25,11),t(',',7,1,0),t('''product view''',3,25,25),t(')',4,1,0) ]).
b_line_i(26,2,3,cmd,1,[ t('',107,26,0),t([ t(16,2,1,0),t('Link',3,1,0) ],29,1,0),t(=,10,1,0),t('link(',1,1,0),t(o(13,'ViewProduct'),28,1,0),t(',',7,1,0),t(15,2,1,0),t(',',7,1,0),t('""',3,1,0),t(')',4,1,0) ]).
b_line_i(27,2,3,cmd,1,[ t('',111,27,0) ]).
b_line_i(29,2,3,cmd,1,[ t('',109,29,0),t('.NOT.',8,1,5),t('udp(',1,29,24),t(o(1,'HasPermission'),28,29,11),t(',',7,1,0),t('''brand view''',3,29,25),t(')',4,1,0) ]).
b_line_i(30,2,3,cmd,1,[ t('',107,30,0),t([ t(2,2,1,0),t('Link',3,1,0) ],29,1,0),t(=,10,1,0),t('link(',1,1,0),t(o(13,'ViewBrand'),28,1,0),t(',',7,1,0),t(1,2,1,0),t(',',7,1,0),t('""',3,1,0),t(')',4,1,0) ]).
b_line_i(31,2,3,cmd,1,[ t('',111,31,0) ]).
b_line_i(33,2,3,cmd,1,[ t('',109,33,0),t('.NOT.',8,1,5),t('udp(',1,33,24),t(o(1,'HasPermission'),28,33,11),t(',',7,1,0),t('''supplier view''',3,33,25),t(')',4,1,0) ]).
b_line_i(34,2,3,cmd,1,[ t('',107,34,0),t([ t(5,2,1,0),t('Link',3,1,0) ],29,1,0),t(=,10,1,0),t('link(',1,1,0),t(o(13,'ViewSupplier'),28,1,0),t(',',7,1,0),t(4,2,1,0),t(',',7,1,0),t('""',3,1,0),t(')',4,1,0) ]).
b_line_i(35,2,3,cmd,1,[ t('',111,35,0) ]).
b_line_i(37,2,3,cmd,1,[ t('',107,37,0),t('State',23,1,0),t(=,10,1,0),t('udp(',1,1,0),t('State',3,1,0),t(37,3,1,0),t(15,2,1,0),t(')',4,1,0) ]).
b_line_i(38,2,3,cmd,1,[ t('',107,38,0),t([ t('Grid',3,0,0),t('load(',1,0,0) ],31,0,0),t(')',4,0,0) ]).
b_line_i(38,2,3,cmd,1,[ t('',147,38,0) ]).
b_line_i(40,2,3,cmd,1,[ t('',146,40,0),t('''DoInsert''',3,40,7) ]).
b_line_i(41,2,4,cmd,1,[ t('',104,41,0),t(o(0,'Product'),28,1,2),t([ 43,'Insert' ],44,41,10),t(',',7,1,0),t('nullvalue(',1,41,26),t(15,2,41,37),t(')',4,1,46) ]).
b_line_i(42,2,4,cmd,1,[ t('',147,42,0) ]).
b_line_i(45,2,4,cmd,1,[ t('',146,45,0),t('''DoExport''',3,45,7) ]).
b_line_i(47,2,5,cmd,1,[ t('',104,47,0),t(o(1,'ExportSectorProductWC'),28,1,2),t('Sectorid',23,1,24),t(',',7,1,0),t('Excelfilename',23,1,35),t(',',7,1,0),t('Errormessage',23,1,51) ]).
b_line_i(49,2,5,cmd,1,[ t('',109,49,0),t('(',0,1,5),t('Excelfilename',23,1,6),t(<>,10,1,21),t('""',3,49,24),t(')',4,1,26) ]).
b_line_i(50,2,5,cmd,1,[ t('',171,50,0),t('Excelfilename',23,1,8) ]).
b_line_i(51,2,5,cmd,1,[ t('',110,51,0) ]).
b_line_i(52,2,5,cmd,1,[ t('',141,52,0),t('Errormessage',23,1,7),t(')',4,1,20) ]).
b_line_i(53,2,5,cmd,1,[ t('',111,53,0) ]).
b_line_i(54,2,5,cmd,1,[ t('',147,54,0) ]).
b_line_i(56,2,5,cmd,1,[ t('',143,56,0),t('''PREPARETRANSACTION''',3,56,5) ]).
b_line_i(57,2,6,cmd,1,[ t('',107,57,0),t('Trncontext',23,1,0),t(=,10,1,0),t([ 'General\UI\TransactionContext',[ t('(',0,57,19),t(')',4,57,20) ],n ],46,1,0) ]).
b_line_i(58,2,6,cmd,1,[ t('',107,58,0),t([ t('Trncontext',23,1,0),t('Callerobject',3,1,0) ],29,1,0),t(=,10,1,0),t('Pgmname',23,1,0) ]).
b_line_i(59,2,6,cmd,1,[ t('',107,59,0),t([ t('Trncontext',23,1,0),t('Callerondelete',3,1,0) ],29,1,0),t(=,10,1,0),t('TRUE',40,1,0) ]).
b_line_i(60,2,6,cmd,1,[ t('',107,60,0),t([ t('Trncontext',23,1,0),t('Callerurl',3,1,0) ],29,1,0),t(=,10,1,0),t([ t('Httprequest',23,1,0),t('Scriptname',3,1,0) ],29,1,0),t(+,5,1,0),t('"?"',3,1,0),t(+,5,1,0),t([ t('Httprequest',23,1,0),t('Querystring',3,1,0) ],29,1,0) ]).
b_line_i(61,2,6,cmd,1,[ t('',107,61,0),t([ t('Trncontext',23,1,0),t('Transactionname',3,1,0) ],29,1,0),t(=,10,1,0),t('"Product"',3,1,0) ]).
b_line_i(63,2,6,cmd,1,[ t('',107,63,0),t('Trncontextatt',23,1,0),t(=,10,1,0),t([ 'General\UI\TransactionContext.Attribute',[ t('(',0,63,22),t(')',4,63,23) ],n ],46,1,0) ]).
b_line_i(64,2,6,cmd,1,[ t('',107,64,0),t([ t('Trncontextatt',23,1,0),t('Attributename',3,1,0) ],29,1,0),t(=,10,1,0),t('"SectorId"',3,1,0) ]).
b_line_i(65,2,6,cmd,1,[ t('',107,65,0),t([ t('Trncontextatt',23,1,0),t('Attributevalue',3,1,0) ],29,1,0),t(=,10,1,0),t('str(',1,1,0),t('Sectorid',23,1,0),t(',',7,1,0),t(6,3,1,0),t(',',7,1,0),t(0,3,1,0),t(')',4,1,0) ]).
b_line_i(66,2,6,cmd,1,[ t('',107,66,0),t([ t('Trncontext',23,66,13),t('Attributes',3,66,25),t('add(',1,66,36) ],31,66,13),t('Trncontextatt',23,1,41),t(')',4,1,55) ]).
b_line_i(68,2,6,cmd,1,[ t('',107,68,0),t([ t('Session',23,68,2),t('set(',1,68,11) ],31,68,2),t('"TrnContext"',3,68,16),t(',',7,1,29),t([ t('Trncontext',23,1,31),t('toxml(',1,1,43) ],31,68,43),t(')',4,1,50),t(')',4,1,51) ]).
b_line_i(69,2,6,cmd,1,[ t('',144,69,0) ]).
 
sf_break_i(25,2).
 
 
 
 
 
 
 
 
 
 
 
 
 
html_i(2,div(2)).
 
html_sub_i(2,3,html_i(0,div(3))).
html_sub_i(3,4,html_i(0,div(4))).
html_sub_i(4,5,html_i(0,div(5))).
html_sub_i(5,6,html_i(0,div(6))).
html_sub_i(6,7,html_i(0,div(7))).
html_sub_i(7,8,html_i(0,div(8))).
html_sub_i(8,9,html_i(0,div(9))).
html_sub_i(9,10,html_i(0,div(10))).
html_sub_i(10,0,html_i(0,html('<nav class="navbar navbar-default gx-navbar  ww__view__actions" data-gx-actiongroup-type="menu">'))).
html_sub_i(10,11,html_i(1,div(11))).
html_sub_i(11,12,html_i(0,div(12))).
html_sub_i(12,0,html_i(0,html('<button type="button" class="navbar-toggle collapsed gx-navbar-toggle" data-toggle="collapse" aria-expanded="false">'))).
html_sub_i(12,0,html_i(1,html('<span class="icon-bar"></span>'))).
html_sub_i(12,0,html_i(2,html('<span class="icon-bar"></span>'))).
html_sub_i(12,0,html_i(3,html('<span class="icon-bar"></span>'))).
html_sub_i(12,0,html_i(4,html('</button>'))).
html_sub_i(12,13,html_i(5,t('',3))).
html_sub_i(11,14,html_i(1,div(14))).
html_sub_i(14,0,html_i(0,html('<ul class="nav navbar-nav">'))).
html_sub_i(14,0,html_i(1,html('<li>'))).
html_sub_i(14,15,html_i(2,button('''DoInsert'''))).
html_sub_i(14,0,html_i(3,html('</li>'))).
html_sub_i(14,0,html_i(4,html('<li>'))).
html_sub_i(14,16,html_i(5,button('''DoExport'''))).
html_sub_i(14,0,html_i(6,html('</li>'))).
html_sub_i(14,0,html_i(7,html('</ul>'))).
html_sub_i(10,0,html_i(2,html('</nav>'))).
html_sub_i(6,17,html_i(1,div(17))).
html_sub_i(17,18,html_i(0,div(18))).
html_sub_i(18,19,html_i(0,comp(errview))).
html_sub_i(6,20,html_i(2,div(20))).
html_sub_i(20,21,html_i(0,div(21))).
html_sub_i(21,22,html_i(0,div(22))).
html_sub_i(22,23,html_i(0,div(23))).
html_sub_i(23,24,html_i(0,div(24))).
html_sub_i(24,25,html_i(0,s(25))).
html_sub_i(3,43,html_i(1,div(43))).
html_sub_i(43,44,html_i(0,div(44))).
html_sub_i(44,45,html_i(0,div(45))).
html_sub_i(45,46,html_i(0,t(9,2))).
 
html_tags_i(1,'Class','form-horizontal Form').
html_tags_i(2,'data-gx-base-lib',none).
html_tags_i(2,'data-abstract-form','').
html_tags_i(9,'data-gx-flex','').
html_tags_i(15,'ControlType','').
html_tags_i(16,'ControlType','').
html_tags_i(46,'data-gx-att','att:9').
 
html_comp_i(19,'Backcolor',rgb(0,0,0),d,[ color ]).
html_comp_i(2,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(2,'Class','Section',d,[ str ]).
html_comp_i(2,'Id','',d,[ str ]).
html_comp_i(2,'Height',measure(0,px),d,[ measure ]).
html_comp_i(2,'Width',measure(0,px),d,[ measure ]).
html_comp_i(2,'Semanticcontent',div,d,[ str ]).
html_comp_i(2,'Align',left,d,[ str ]).
html_comp_i(2,'Valign',top,d,[ str ]).
html_comp_i(3,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(3,'Class','ww__view__grid-table',v,[ str ]).
html_comp_i(3,'Id','Maintable',v,[ str ]).
html_comp_i(3,'Height',measure(0,px),d,[ measure ]).
html_comp_i(3,'Width',measure(0,px),d,[ measure ]).
html_comp_i(3,'Semanticcontent',div,d,[ str ]).
html_comp_i(3,'Align',left,d,[ str ]).
html_comp_i(3,'Valign',top,d,[ str ]).
html_comp_i(4,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(4,'Class',row,v,[ str ]).
html_comp_i(4,'Id','',d,[ str ]).
html_comp_i(4,'Height',measure(0,px),d,[ measure ]).
html_comp_i(4,'Width',measure(0,px),d,[ measure ]).
html_comp_i(4,'Semanticcontent',div,d,[ str ]).
html_comp_i(4,'Align',left,d,[ str ]).
html_comp_i(4,'Valign',top,d,[ str ]).
html_comp_i(5,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(5,'Class','col-xs-12 ww__grid-cell',v,[ str ]).
html_comp_i(5,'Id','Gridcell',v,[ str ]).
html_comp_i(5,'Height',measure(0,px),d,[ measure ]).
html_comp_i(5,'Width',measure(0,px),d,[ measure ]).
html_comp_i(5,'Semanticcontent',div,d,[ str ]).
html_comp_i(5,'Align',left,d,[ str ]).
html_comp_i(5,'Valign',top,d,[ str ]).
html_comp_i(6,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(6,'Class','Table',v,[ str ]).
html_comp_i(6,'Id','Gridtable',v,[ str ]).
html_comp_i(6,'Height',measure(0,px),d,[ measure ]).
html_comp_i(6,'Width',measure(0,px),d,[ measure ]).
html_comp_i(6,'Semanticcontent',div,d,[ str ]).
html_comp_i(6,'Align',left,d,[ str ]).
html_comp_i(6,'Valign',top,d,[ str ]).
html_comp_i(7,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(7,'Class',row,v,[ str ]).
html_comp_i(7,'Id','',d,[ str ]).
html_comp_i(7,'Height',measure(0,px),d,[ measure ]).
html_comp_i(7,'Width',measure(0,px),d,[ measure ]).
html_comp_i(7,'Semanticcontent',div,d,[ str ]).
html_comp_i(7,'Align',left,d,[ str ]).
html_comp_i(7,'Valign',top,d,[ str ]).
html_comp_i(8,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(8,'Class','col-xs-12',v,[ str ]).
html_comp_i(8,'Id','',d,[ str ]).
html_comp_i(8,'Height',measure(0,px),d,[ measure ]).
html_comp_i(8,'Width',measure(0,px),d,[ measure ]).
html_comp_i(8,'Semanticcontent',div,d,[ str ]).
html_comp_i(8,'Align',left,d,[ str ]).
html_comp_i(8,'Valign',top,d,[ str ]).
html_comp_i(9,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(9,'Class','Flex ww__actions-container',v,[ str ]).
html_comp_i(9,'Id','Tabletop',v,[ str ]).
html_comp_i(9,'Height',measure(0,px),d,[ measure ]).
html_comp_i(9,'Width',measure(0,px),d,[ measure ]).
html_comp_i(9,'Semanticcontent',div,d,[ str ]).
html_comp_i(9,'Align',left,d,[ str ]).
html_comp_i(9,'Valign',top,d,[ str ]).
html_comp_i(10,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(10,'Class','ww__view__grid__actions-cell',v,[ str ]).
html_comp_i(10,'Id','',d,[ str ]).
html_comp_i(10,'Height',measure(0,px),d,[ measure ]).
html_comp_i(10,'Width',measure(0,px),d,[ measure ]).
html_comp_i(10,'Semanticcontent',div,d,[ str ]).
html_comp_i(10,'Align',left,d,[ str ]).
html_comp_i(10,'Valign',top,d,[ str ]).
html_comp_i(11,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(11,'Class','container-fluid',v,[ str ]).
html_comp_i(11,'Id','',d,[ str ]).
html_comp_i(11,'Height',measure(0,px),d,[ measure ]).
html_comp_i(11,'Width',measure(0,px),d,[ measure ]).
html_comp_i(11,'Semanticcontent',div,d,[ str ]).
html_comp_i(11,'Align',left,d,[ str ]).
html_comp_i(11,'Valign',top,d,[ str ]).
html_comp_i(12,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(12,'Class','navbar-header',v,[ str ]).
html_comp_i(12,'Id','',d,[ str ]).
html_comp_i(12,'Height',measure(0,px),d,[ measure ]).
html_comp_i(12,'Width',measure(0,px),d,[ measure ]).
html_comp_i(12,'Semanticcontent',div,d,[ str ]).
html_comp_i(12,'Align',left,d,[ str ]).
html_comp_i(12,'Valign',top,d,[ str ]).
html_comp_i(13,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(13,'Caption','',d,[ str ]).
html_comp_i(13,'Id','',d,[ str ]).
html_comp_i(13,'Class','navbar-brand',v,[ str ]).
html_comp_i(13,'Event','',d,[ str ]).
html_comp_i(13,'Returnonclick',0,d,[ bool ]).
html_comp_i(13,'Gxformat',0,d,[ num ]).
html_comp_i(13,'Title','',d,[ str ]).
html_comp_i(13,'Fill',-1,d,[ bool ]).
html_comp_i(13,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(13,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(13,'Font','',d,[ str ]).
html_comp_i(14,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(14,'Class','collapse navbar-collapse gx-navbar-inner',v,[ str ]).
html_comp_i(14,'Id','Actions_inner',v,[ str ]).
html_comp_i(14,'Height',measure(0,px),d,[ measure ]).
html_comp_i(14,'Width',measure(0,px),d,[ measure ]).
html_comp_i(14,'Semanticcontent',div,d,[ str ]).
html_comp_i(14,'Align',left,d,[ str ]).
html_comp_i(14,'Valign',top,d,[ str ]).
html_comp_i(15,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(15,'Controlname','Btninsert',v,[ str ]).
html_comp_i(15,'Class','Button button-primary',v,[ str ]).
html_comp_i(15,'Event','''DoInsert''',v,[ str ]).
html_comp_i(15,'Caption','Insert',d,[ str ]).
html_comp_i(15,'Title','Insert',d,[ str ]).
html_comp_i(15,'Font',font('Microsoft Sans Serif',10,[]),d,[ font ]).
html_comp_i(15,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(15,'Backcolor',rgb(240,240,240),d,[ color ]).
html_comp_i(15,'Border','2',d,[ str ]).
html_comp_i(15,'Bordercolor',rgb(255,255,255),d,[ color ]).
html_comp_i(15,'Buttonborderstyle',standard,d,[ str ]).
html_comp_i(16,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(16,'Controlname','Btnexport',v,[ str ]).
html_comp_i(16,'Class','Button button-tertiary',v,[ str ]).
html_comp_i(16,'Event','''DoExport''',v,[ str ]).
html_comp_i(16,'Caption','Export',d,[ str ]).
html_comp_i(16,'Title','Export to Excel',v,[ str ]).
html_comp_i(16,'Font',font('Microsoft Sans Serif',10,[]),d,[ font ]).
html_comp_i(16,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(16,'Backcolor',rgb(240,240,240),d,[ color ]).
html_comp_i(16,'Border','2',d,[ str ]).
html_comp_i(16,'Bordercolor',rgb(255,255,255),d,[ color ]).
html_comp_i(16,'Buttonborderstyle',standard,d,[ str ]).
html_comp_i(17,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(17,'Class',row,v,[ str ]).
html_comp_i(17,'Id','',d,[ str ]).
html_comp_i(17,'Height',measure(0,px),d,[ measure ]).
html_comp_i(17,'Width',measure(0,px),d,[ measure ]).
html_comp_i(17,'Semanticcontent',div,d,[ str ]).
html_comp_i(17,'Align',left,d,[ str ]).
html_comp_i(17,'Valign',top,d,[ str ]).
html_comp_i(18,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(18,'Class','col-xs-12',v,[ str ]).
html_comp_i(18,'Id','',d,[ str ]).
html_comp_i(18,'Height',measure(0,px),d,[ measure ]).
html_comp_i(18,'Width',measure(0,px),d,[ measure ]).
html_comp_i(18,'Semanticcontent',div,d,[ str ]).
html_comp_i(18,'Align',left,d,[ str ]).
html_comp_i(18,'Valign',top,d,[ str ]).
html_comp_i(19,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(19,'Controlname','Errorviewer',v,[ str ]).
html_comp_i(19,'Class','ErrorViewer',v,[ str ]).
html_comp_i(19,'Displaymode',1,d,[ num ]).
html_comp_i(19,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(19,'Font',font('Microsoft Sans Serif',10,[]),d,[ font ]).
html_comp_i(19,'Fill',-1,d,[ bool ]).
html_comp_i(20,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(20,'Class',row,v,[ str ]).
html_comp_i(20,'Id','',d,[ str ]).
html_comp_i(20,'Height',measure(0,px),d,[ measure ]).
html_comp_i(20,'Width',measure(0,px),d,[ measure ]).
html_comp_i(20,'Semanticcontent',div,d,[ str ]).
html_comp_i(20,'Align',left,d,[ str ]).
html_comp_i(20,'Valign',top,d,[ str ]).
html_comp_i(21,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(21,'Class','col-xs-12',v,[ str ]).
html_comp_i(21,'Id','',d,[ str ]).
html_comp_i(21,'Height',measure(0,px),d,[ measure ]).
html_comp_i(21,'Width',measure(0,px),d,[ measure ]).
html_comp_i(21,'Semanticcontent',div,d,[ str ]).
html_comp_i(21,'Align',left,d,[ str ]).
html_comp_i(21,'Valign',top,d,[ str ]).
html_comp_i(22,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(22,'Class','ww__grid-container',v,[ str ]).
html_comp_i(22,'Id','Gridcontainer',v,[ str ]).
html_comp_i(22,'Height',measure(0,px),d,[ measure ]).
html_comp_i(22,'Width',measure(0,px),d,[ measure ]).
html_comp_i(22,'Semanticcontent',div,d,[ str ]).
html_comp_i(22,'Align',left,d,[ str ]).
html_comp_i(22,'Valign',top,d,[ str ]).
html_comp_i(23,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(23,'Class',row,v,[ str ]).
html_comp_i(23,'Id','',d,[ str ]).
html_comp_i(23,'Height',measure(0,px),d,[ measure ]).
html_comp_i(23,'Width',measure(0,px),d,[ measure ]).
html_comp_i(23,'Semanticcontent',div,d,[ str ]).
html_comp_i(23,'Align',left,d,[ str ]).
html_comp_i(23,'Valign',top,d,[ str ]).
html_comp_i(24,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(24,'Class','col-xs-12',v,[ str ]).
html_comp_i(24,'Id','',d,[ str ]).
html_comp_i(24,'Height',measure(0,px),d,[ measure ]).
html_comp_i(24,'Width',measure(0,px),d,[ measure ]).
html_comp_i(24,'Semanticcontent',div,d,[ str ]).
html_comp_i(24,'Align',left,d,[ str ]).
html_comp_i(24,'Valign',top,d,[ str ]).
html_comp_i(25,'Isabstractlayoutcontrol',-1,v,[ bool ]).
html_comp_i(25,'Controlname','Grid',v,[ str ]).
html_comp_i(25,'Controlwhere','',d,[ str ]).
html_comp_i(25,'Controlunique','',d,[ str ]).
html_comp_i(25,'Save_state',0,d,[ bool ]).
html_comp_i(25,'Iddataselector','',d,[ str ]).
html_comp_i(25,'Sflrender','',d,[ str ]).
html_comp_i(25,'Class','ViewGrid',v,[ str ]).
html_comp_i(25,'Prop_emptydatasettext','',d,[ str ]).
html_comp_i(25,'Autoresize',-1,d,[ bool ]).
html_comp_i(25,'Gxwidth',measure(0,px),d,[ measure ]).
html_comp_i(25,'Gxheight',measure(0,px),d,[ measure ]).
html_comp_i(25,'Maxcols',1,d,[ num ]).
html_comp_i(25,'Maxrows',0,d,[ num ]).
html_comp_i(25,'Header','',d,[ str ]).
html_comp_i(25,'Title','',d,[ str ]).
html_comp_i(25,'Linescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(25,'Linesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(25,'Titlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(25,'Titlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(25,'Align',left,d,[ str ]).
html_comp_i(25,'Cellpadding','1',d,[ str ]).
html_comp_i(25,'Cellspacing','2',d,[ str ]).
html_comp_i(25,'Sortable',-1,d,[ bool ]).
html_comp_i(25,'Allowdrop',0,d,[ bool ]).
html_comp_i(25,'Allowdrag',0,d,[ bool ]).
html_comp_i(25,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(25,'Allowcollapsing',0,d,[ bool ]).
html_comp_i(25,'Allowselection',0,d,[ bool ]).
html_comp_i(26,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(26,'Colcount',80,d,[ num ]).
html_comp_i(26,'Colattid',55,v,[ num ]).
html_comp_i(26,'Controlname','Productcode',d,[ str ]).
html_comp_i(26,'Class','Attribute',v,[ str ]).
html_comp_i(26,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(26,'Returnonclick',0,d,[ bool ]).
html_comp_i(26,'Eventgx','',d,[ str ]).
html_comp_i(26,'Controltype',2,d,[ num ]).
html_comp_i(26,'Inputtype',0,d,[ num ]).
html_comp_i(26,'Editautocomplete',0,d,[ num ]).
html_comp_i(26,'Autocorrection',-1,d,[ bool ]).
html_comp_i(26,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(26,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(26,'Colreadonly',-1,d,[ bool ]).
html_comp_i(26,'Autocomplete',-1,d,[ bool ]).
html_comp_i(26,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(26,'Ispassword',0,d,[ bool ]).
html_comp_i(26,'Colautoresize',-1,d,[ bool ]).
html_comp_i(26,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(26,'Height',measure(17,px),d,[ measure ]).
html_comp_i(26,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(26,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(26,'Coltitle','Code',d,[ str ]).
html_comp_i(26,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(26,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(26,'Horizontalalignment',left,d,[ str ]).
html_comp_i(26,'Gxformat',0,d,[ num ]).
html_comp_i(26,'Colvisible',-1,v,[ bool ]).
html_comp_i(26,'Title','',d,[ str ]).
html_comp_i(26,'Invitemsg','',d,[ str ]).
html_comp_i(27,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(27,'Colcount',60,d,[ num ]).
html_comp_i(27,'Colattid',16,v,[ num ]).
html_comp_i(27,'Controlname','Productname',d,[ str ]).
html_comp_i(27,'Class','attribute-description',v,[ str ]).
html_comp_i(27,'Columnclass',column,v,[ str ]).
html_comp_i(27,'Returnonclick',0,d,[ bool ]).
html_comp_i(27,'Eventgx','',d,[ str ]).
html_comp_i(27,'Controltype',2,d,[ num ]).
html_comp_i(27,'Inputtype',0,d,[ num ]).
html_comp_i(27,'Editautocomplete',0,d,[ num ]).
html_comp_i(27,'Autocorrection',-1,d,[ bool ]).
html_comp_i(27,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(27,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(27,'Colreadonly',-1,d,[ bool ]).
html_comp_i(27,'Autocomplete',-1,d,[ bool ]).
html_comp_i(27,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(27,'Ispassword',0,d,[ bool ]).
html_comp_i(27,'Colautoresize',-1,d,[ bool ]).
html_comp_i(27,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(27,'Height',measure(17,px),d,[ measure ]).
html_comp_i(27,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(27,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(27,'Coltitle','Name',d,[ str ]).
html_comp_i(27,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(27,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(27,'Horizontalalignment',left,d,[ str ]).
html_comp_i(27,'Gxformat',0,d,[ num ]).
html_comp_i(27,'Colvisible',-1,v,[ bool ]).
html_comp_i(27,'Title','',d,[ str ]).
html_comp_i(27,'Invitemsg','',d,[ str ]).
html_comp_i(28,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(28,'Colcount',6,d,[ num ]).
html_comp_i(28,'Colattid',17,v,[ num ]).
html_comp_i(28,'Controlname','Productstock',d,[ str ]).
html_comp_i(28,'Class','Attribute',v,[ str ]).
html_comp_i(28,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(28,'Returnonclick',0,d,[ bool ]).
html_comp_i(28,'Eventgx','',d,[ str ]).
html_comp_i(28,'Controltype',2,d,[ num ]).
html_comp_i(28,'Inputtype',0,d,[ num ]).
html_comp_i(28,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(28,'Colreadonly',-1,d,[ bool ]).
html_comp_i(28,'Autocomplete',-1,d,[ bool ]).
html_comp_i(28,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(28,'Ispassword',0,d,[ bool ]).
html_comp_i(28,'Colautoresize',-1,d,[ bool ]).
html_comp_i(28,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(28,'Height',measure(17,px),d,[ measure ]).
html_comp_i(28,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(28,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(28,'Coltitle','Stock',d,[ str ]).
html_comp_i(28,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(28,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(28,'Horizontalalignment',right,d,[ str ]).
html_comp_i(28,'Gxformat',0,d,[ num ]).
html_comp_i(28,'Colvisible',-1,v,[ bool ]).
html_comp_i(28,'Title','',d,[ str ]).
html_comp_i(28,'Invitemsg','',d,[ str ]).
html_comp_i(29,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(29,'Colcount',6,d,[ num ]).
html_comp_i(29,'Colattid',69,v,[ num ]).
html_comp_i(29,'Controlname','Productminiumstock',d,[ str ]).
html_comp_i(29,'Class','Attribute',v,[ str ]).
html_comp_i(29,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(29,'Returnonclick',0,d,[ bool ]).
html_comp_i(29,'Eventgx','',d,[ str ]).
html_comp_i(29,'Controltype',2,d,[ num ]).
html_comp_i(29,'Inputtype',0,d,[ num ]).
html_comp_i(29,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(29,'Colreadonly',-1,d,[ bool ]).
html_comp_i(29,'Autocomplete',-1,d,[ bool ]).
html_comp_i(29,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(29,'Ispassword',0,d,[ bool ]).
html_comp_i(29,'Colautoresize',-1,d,[ bool ]).
html_comp_i(29,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(29,'Height',measure(17,px),d,[ measure ]).
html_comp_i(29,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(29,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(29,'Coltitle','Min. Stock',d,[ str ]).
html_comp_i(29,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(29,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(29,'Horizontalalignment',right,d,[ str ]).
html_comp_i(29,'Gxformat',0,d,[ num ]).
html_comp_i(29,'Colvisible',-1,v,[ bool ]).
html_comp_i(29,'Title','',d,[ str ]).
html_comp_i(29,'Invitemsg','',d,[ str ]).
html_comp_i(30,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(30,'Colcount',18,d,[ num ]).
html_comp_i(30,'Colattid',85,v,[ num ]).
html_comp_i(30,'Controlname','Productcostprice',d,[ str ]).
html_comp_i(30,'Class','Attribute',v,[ str ]).
html_comp_i(30,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(30,'Returnonclick',0,d,[ bool ]).
html_comp_i(30,'Eventgx','',d,[ str ]).
html_comp_i(30,'Controltype',2,d,[ num ]).
html_comp_i(30,'Inputtype',0,d,[ num ]).
html_comp_i(30,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(30,'Colreadonly',-1,d,[ bool ]).
html_comp_i(30,'Autocomplete',-1,d,[ bool ]).
html_comp_i(30,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(30,'Ispassword',0,d,[ bool ]).
html_comp_i(30,'Colautoresize',-1,d,[ bool ]).
html_comp_i(30,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(30,'Height',measure(17,px),d,[ measure ]).
html_comp_i(30,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(30,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(30,'Coltitle','Cost Price',d,[ str ]).
html_comp_i(30,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(30,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(30,'Horizontalalignment',right,d,[ str ]).
html_comp_i(30,'Gxformat',0,d,[ num ]).
html_comp_i(30,'Colvisible',-1,v,[ bool ]).
html_comp_i(30,'Title','',d,[ str ]).
html_comp_i(30,'Invitemsg','',d,[ str ]).
html_comp_i(31,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(31,'Colcount',18,d,[ num ]).
html_comp_i(31,'Colattid',90,v,[ num ]).
html_comp_i(31,'Controlname','Productretailprice',d,[ str ]).
html_comp_i(31,'Class','Attribute',v,[ str ]).
html_comp_i(31,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(31,'Returnonclick',0,d,[ bool ]).
html_comp_i(31,'Eventgx','',d,[ str ]).
html_comp_i(31,'Controltype',2,d,[ num ]).
html_comp_i(31,'Inputtype',0,d,[ num ]).
html_comp_i(31,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(31,'Colreadonly',-1,d,[ bool ]).
html_comp_i(31,'Autocomplete',-1,d,[ bool ]).
html_comp_i(31,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(31,'Ispassword',0,d,[ bool ]).
html_comp_i(31,'Colautoresize',-1,d,[ bool ]).
html_comp_i(31,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(31,'Height',measure(17,px),d,[ measure ]).
html_comp_i(31,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(31,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(31,'Coltitle','R. Price',d,[ str ]).
html_comp_i(31,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(31,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(31,'Horizontalalignment',right,d,[ str ]).
html_comp_i(31,'Gxformat',0,d,[ num ]).
html_comp_i(31,'Colvisible',-1,v,[ bool ]).
html_comp_i(31,'Title','',d,[ str ]).
html_comp_i(31,'Invitemsg','',d,[ str ]).
html_comp_i(32,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(32,'Colcount',18,d,[ num ]).
html_comp_i(32,'Colattid',88,v,[ num ]).
html_comp_i(32,'Controlname','Productwholesaleprice',d,[ str ]).
html_comp_i(32,'Class','Attribute',v,[ str ]).
html_comp_i(32,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(32,'Returnonclick',0,d,[ bool ]).
html_comp_i(32,'Eventgx','',d,[ str ]).
html_comp_i(32,'Controltype',2,d,[ num ]).
html_comp_i(32,'Inputtype',0,d,[ num ]).
html_comp_i(32,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(32,'Colreadonly',-1,d,[ bool ]).
html_comp_i(32,'Autocomplete',-1,d,[ bool ]).
html_comp_i(32,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(32,'Ispassword',0,d,[ bool ]).
html_comp_i(32,'Colautoresize',-1,d,[ bool ]).
html_comp_i(32,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(32,'Height',measure(17,px),d,[ measure ]).
html_comp_i(32,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(32,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(32,'Coltitle','W. Price',d,[ str ]).
html_comp_i(32,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(32,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(32,'Horizontalalignment',right,d,[ str ]).
html_comp_i(32,'Gxformat',0,d,[ num ]).
html_comp_i(32,'Colvisible',-1,v,[ bool ]).
html_comp_i(32,'Title','',d,[ str ]).
html_comp_i(32,'Invitemsg','',d,[ str ]).
html_comp_i(33,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(33,'Colcount',4,d,[ num ]).
html_comp_i(33,'Colattid',93,v,[ num ]).
html_comp_i(33,'Controlname','Productminiumquantitywholesale',d,[ str ]).
html_comp_i(33,'Class','Attribute',v,[ str ]).
html_comp_i(33,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(33,'Returnonclick',0,d,[ bool ]).
html_comp_i(33,'Eventgx','',d,[ str ]).
html_comp_i(33,'Controltype',2,d,[ num ]).
html_comp_i(33,'Inputtype',0,d,[ num ]).
html_comp_i(33,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(33,'Colreadonly',-1,d,[ bool ]).
html_comp_i(33,'Autocomplete',-1,d,[ bool ]).
html_comp_i(33,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(33,'Ispassword',0,d,[ bool ]).
html_comp_i(33,'Colautoresize',-1,d,[ bool ]).
html_comp_i(33,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(33,'Height',measure(17,px),d,[ measure ]).
html_comp_i(33,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(33,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(33,'Coltitle','Qty. Whol.',d,[ str ]).
html_comp_i(33,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(33,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(33,'Horizontalalignment',right,d,[ str ]).
html_comp_i(33,'Gxformat',0,d,[ num ]).
html_comp_i(33,'Colvisible',-1,v,[ bool ]).
html_comp_i(33,'Title','',d,[ str ]).
html_comp_i(33,'Invitemsg','',d,[ str ]).
html_comp_i(34,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(34,'Colcount',60,d,[ num ]).
html_comp_i(34,'Colattid',2,v,[ num ]).
html_comp_i(34,'Controlname','Brandname',d,[ str ]).
html_comp_i(34,'Class','Attribute',v,[ str ]).
html_comp_i(34,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(34,'Returnonclick',0,d,[ bool ]).
html_comp_i(34,'Eventgx','',d,[ str ]).
html_comp_i(34,'Controltype',2,d,[ num ]).
html_comp_i(34,'Inputtype',0,d,[ num ]).
html_comp_i(34,'Editautocomplete',0,d,[ num ]).
html_comp_i(34,'Autocorrection',-1,d,[ bool ]).
html_comp_i(34,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(34,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(34,'Colreadonly',-1,d,[ bool ]).
html_comp_i(34,'Autocomplete',-1,d,[ bool ]).
html_comp_i(34,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(34,'Ispassword',0,d,[ bool ]).
html_comp_i(34,'Colautoresize',-1,d,[ bool ]).
html_comp_i(34,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(34,'Height',measure(17,px),d,[ measure ]).
html_comp_i(34,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(34,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(34,'Coltitle','Brand',d,[ str ]).
html_comp_i(34,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(34,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(34,'Horizontalalignment',left,d,[ str ]).
html_comp_i(34,'Gxformat',0,d,[ num ]).
html_comp_i(34,'Colvisible',-1,v,[ bool ]).
html_comp_i(34,'Title','',d,[ str ]).
html_comp_i(34,'Invitemsg','',d,[ str ]).
html_comp_i(35,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(35,'Colcount',60,d,[ num ]).
html_comp_i(35,'Colattid',5,v,[ num ]).
html_comp_i(35,'Controlname','Suppliername',d,[ str ]).
html_comp_i(35,'Class','Attribute',v,[ str ]).
html_comp_i(35,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(35,'Returnonclick',0,d,[ bool ]).
html_comp_i(35,'Eventgx','',d,[ str ]).
html_comp_i(35,'Controltype',2,d,[ num ]).
html_comp_i(35,'Inputtype',0,d,[ num ]).
html_comp_i(35,'Editautocomplete',0,d,[ num ]).
html_comp_i(35,'Autocorrection',-1,d,[ bool ]).
html_comp_i(35,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(35,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(35,'Colreadonly',-1,d,[ bool ]).
html_comp_i(35,'Autocomplete',-1,d,[ bool ]).
html_comp_i(35,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(35,'Ispassword',0,d,[ bool ]).
html_comp_i(35,'Colautoresize',-1,d,[ bool ]).
html_comp_i(35,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(35,'Height',measure(17,px),d,[ measure ]).
html_comp_i(35,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(35,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(35,'Coltitle','Supplier',d,[ str ]).
html_comp_i(35,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(35,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(35,'Horizontalalignment',left,d,[ str ]).
html_comp_i(35,'Gxformat',0,d,[ num ]).
html_comp_i(35,'Colvisible',-1,v,[ bool ]).
html_comp_i(35,'Title','',d,[ str ]).
html_comp_i(35,'Invitemsg','',d,[ str ]).
html_comp_i(36,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(36,'Colcount',40,d,[ num ]).
html_comp_i(36,'Colattid',-17,v,[ num ]).
html_comp_i(36,'Controlname','&State',d,[ str ]).
html_comp_i(36,'Class','Attribute',v,[ str ]).
html_comp_i(36,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(36,'Returnonclick',0,d,[ bool ]).
html_comp_i(36,'Eventgx','',d,[ str ]).
html_comp_i(36,'Controltype',2,d,[ num ]).
html_comp_i(36,'Inputtype',0,d,[ num ]).
html_comp_i(36,'Editautocomplete',0,d,[ num ]).
html_comp_i(36,'Autocorrection',-1,d,[ bool ]).
html_comp_i(36,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(36,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(36,'Colreadonly',-1,v,[ bool ]).
html_comp_i(36,'Autocomplete',-1,d,[ bool ]).
html_comp_i(36,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(36,'Ispassword',0,d,[ bool ]).
html_comp_i(36,'Colautoresize',-1,d,[ bool ]).
html_comp_i(36,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(36,'Height',measure(17,px),d,[ measure ]).
html_comp_i(36,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(36,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(36,'Coltitle','State',d,[ str ]).
html_comp_i(36,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(36,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(36,'Horizontalalignment',left,d,[ str ]).
html_comp_i(36,'Gxformat',0,d,[ num ]).
html_comp_i(36,'Colvisible',-1,v,[ bool ]).
html_comp_i(36,'Title','',d,[ str ]).
html_comp_i(36,'Invitemsg','',d,[ str ]).
html_comp_i(37,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(37,'Colcount',10,d,[ num ]).
html_comp_i(37,'Colattid',28,v,[ num ]).
html_comp_i(37,'Controlname','Productcreateddate',d,[ str ]).
html_comp_i(37,'Class','Attribute',v,[ str ]).
html_comp_i(37,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(37,'Returnonclick',0,d,[ bool ]).
html_comp_i(37,'Eventgx','',d,[ str ]).
html_comp_i(37,'Controltype',2,d,[ num ]).
html_comp_i(37,'Inputtype',0,d,[ num ]).
html_comp_i(37,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(37,'Colreadonly',-1,d,[ bool ]).
html_comp_i(37,'Autocomplete',-1,d,[ bool ]).
html_comp_i(37,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(37,'Ispassword',0,d,[ bool ]).
html_comp_i(37,'Colautoresize',-1,d,[ bool ]).
html_comp_i(37,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(37,'Height',measure(17,px),d,[ measure ]).
html_comp_i(37,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(37,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(37,'Coltitle','Created',d,[ str ]).
html_comp_i(37,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(37,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(37,'Horizontalalignment',right,d,[ str ]).
html_comp_i(37,'Gxformat',0,d,[ num ]).
html_comp_i(37,'Colvisible',-1,v,[ bool ]).
html_comp_i(37,'Title','',d,[ str ]).
html_comp_i(37,'Use_datepicker',-1,d,[ bool ]).
html_comp_i(37,'Flat_datepicker',0,d,[ bool ]).
html_comp_i(38,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(38,'Colcount',80,d,[ num ]).
html_comp_i(38,'Colattid',19,v,[ num ]).
html_comp_i(38,'Controlname','Productdescription',d,[ str ]).
html_comp_i(38,'Class','Attribute',v,[ str ]).
html_comp_i(38,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(38,'Returnonclick',0,d,[ bool ]).
html_comp_i(38,'Eventgx','',d,[ str ]).
html_comp_i(38,'Controltype',2,d,[ num ]).
html_comp_i(38,'Inputtype',0,d,[ num ]).
html_comp_i(38,'Editautocomplete',0,d,[ num ]).
html_comp_i(38,'Autocorrection',-1,d,[ bool ]).
html_comp_i(38,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(38,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(38,'Colreadonly',-1,d,[ bool ]).
html_comp_i(38,'Autocomplete',-1,d,[ bool ]).
html_comp_i(38,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(38,'Ispassword',0,d,[ bool ]).
html_comp_i(38,'Colautoresize',-1,d,[ bool ]).
html_comp_i(38,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(38,'Height',measure(17,px),d,[ measure ]).
html_comp_i(38,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(38,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(38,'Coltitle','Description',d,[ str ]).
html_comp_i(38,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(38,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(38,'Horizontalalignment',left,d,[ str ]).
html_comp_i(38,'Gxformat',0,d,[ num ]).
html_comp_i(38,'Colvisible',0,v,[ bool ]).
html_comp_i(38,'Title','',d,[ str ]).
html_comp_i(38,'Invitemsg','',d,[ str ]).
html_comp_i(39,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(39,'Colcount',10,d,[ num ]).
html_comp_i(39,'Colattid',29,v,[ num ]).
html_comp_i(39,'Controlname','Productmodifieddate',d,[ str ]).
html_comp_i(39,'Class','Attribute',v,[ str ]).
html_comp_i(39,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(39,'Returnonclick',0,d,[ bool ]).
html_comp_i(39,'Eventgx','',d,[ str ]).
html_comp_i(39,'Controltype',2,d,[ num ]).
html_comp_i(39,'Inputtype',0,d,[ num ]).
html_comp_i(39,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(39,'Colreadonly',-1,d,[ bool ]).
html_comp_i(39,'Autocomplete',-1,d,[ bool ]).
html_comp_i(39,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(39,'Ispassword',0,d,[ bool ]).
html_comp_i(39,'Colautoresize',-1,d,[ bool ]).
html_comp_i(39,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(39,'Height',measure(17,px),d,[ measure ]).
html_comp_i(39,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(39,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(39,'Coltitle','Modified Date',d,[ str ]).
html_comp_i(39,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(39,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(39,'Horizontalalignment',right,d,[ str ]).
html_comp_i(39,'Gxformat',0,d,[ num ]).
html_comp_i(39,'Colvisible',0,v,[ bool ]).
html_comp_i(39,'Title','',d,[ str ]).
html_comp_i(39,'Use_datepicker',-1,d,[ bool ]).
html_comp_i(39,'Flat_datepicker',0,d,[ bool ]).
html_comp_i(40,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(40,'Colcount',8,d,[ num ]).
html_comp_i(40,'Colattid',87,v,[ num ]).
html_comp_i(40,'Controlname','Productwholesaleprofit',d,[ str ]).
html_comp_i(40,'Class','Attribute',v,[ str ]).
html_comp_i(40,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(40,'Returnonclick',0,d,[ bool ]).
html_comp_i(40,'Eventgx','',d,[ str ]).
html_comp_i(40,'Controltype',2,d,[ num ]).
html_comp_i(40,'Inputtype',0,d,[ num ]).
html_comp_i(40,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(40,'Colreadonly',-1,d,[ bool ]).
html_comp_i(40,'Autocomplete',-1,d,[ bool ]).
html_comp_i(40,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(40,'Ispassword',0,d,[ bool ]).
html_comp_i(40,'Colautoresize',-1,d,[ bool ]).
html_comp_i(40,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(40,'Height',measure(17,px),d,[ measure ]).
html_comp_i(40,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(40,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(40,'Coltitle','Wholesale Profit',d,[ str ]).
html_comp_i(40,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(40,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(40,'Horizontalalignment',right,d,[ str ]).
html_comp_i(40,'Gxformat',0,d,[ num ]).
html_comp_i(40,'Colvisible',0,v,[ bool ]).
html_comp_i(40,'Title','',d,[ str ]).
html_comp_i(40,'Invitemsg','',d,[ str ]).
html_comp_i(41,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(41,'Colcount',8,d,[ num ]).
html_comp_i(41,'Colattid',89,v,[ num ]).
html_comp_i(41,'Controlname','Productretailprofit',d,[ str ]).
html_comp_i(41,'Class','Attribute',v,[ str ]).
html_comp_i(41,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(41,'Returnonclick',0,d,[ bool ]).
html_comp_i(41,'Eventgx','',d,[ str ]).
html_comp_i(41,'Controltype',2,d,[ num ]).
html_comp_i(41,'Inputtype',0,d,[ num ]).
html_comp_i(41,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(41,'Colreadonly',-1,d,[ bool ]).
html_comp_i(41,'Autocomplete',-1,d,[ bool ]).
html_comp_i(41,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(41,'Ispassword',0,d,[ bool ]).
html_comp_i(41,'Colautoresize',-1,d,[ bool ]).
html_comp_i(41,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(41,'Height',measure(17,px),d,[ measure ]).
html_comp_i(41,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(41,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(41,'Coltitle','Retail Profit',d,[ str ]).
html_comp_i(41,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(41,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(41,'Horizontalalignment',right,d,[ str ]).
html_comp_i(41,'Gxformat',0,d,[ num ]).
html_comp_i(41,'Colvisible',0,v,[ bool ]).
html_comp_i(41,'Title','',d,[ str ]).
html_comp_i(41,'Invitemsg','',d,[ str ]).
html_comp_i(42,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(42,'Colcount',4,d,[ num ]).
html_comp_i(42,'Colattid',110,v,[ num ]).
html_comp_i(42,'Controlname','Productactive',d,[ str ]).
html_comp_i(42,'Class','Attribute',v,[ str ]).
html_comp_i(42,'Columnclass','column WWOptionalColumn',v,[ str ]).
html_comp_i(42,'Returnonclick',0,d,[ bool ]).
html_comp_i(42,'Controltype',3,d,[ num ]).
html_comp_i(42,'Controltitle','',d,[ str ]).
html_comp_i(42,'Controlcheckvalue',true,d,[ str ]).
html_comp_i(42,'Controluncheckvalue',false,d,[ str ]).
html_comp_i(42,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(42,'Colreadonly',-1,d,[ bool ]).
html_comp_i(42,'Autocomplete',0,d,[ bool ]).
html_comp_i(42,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(42,'Colautoresize',-1,d,[ bool ]).
html_comp_i(42,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(42,'Height',measure(17,px),d,[ measure ]).
html_comp_i(42,'Collinesfont',font('Courier New',9,[]),d,[ font ]).
html_comp_i(42,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(42,'Coltitle','Active',d,[ str ]).
html_comp_i(42,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(42,'Coltitlecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(42,'Colvisible',0,v,[ bool ]).
html_comp_i(42,'Title','',d,[ str ]).
html_comp_i(42,'Invitemsg','',d,[ str ]).
html_comp_i(43,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(43,'Class',row,v,[ str ]).
html_comp_i(43,'Id','',d,[ str ]).
html_comp_i(43,'Height',measure(0,px),d,[ measure ]).
html_comp_i(43,'Width',measure(0,px),d,[ measure ]).
html_comp_i(43,'Semanticcontent',div,d,[ str ]).
html_comp_i(43,'Align',left,d,[ str ]).
html_comp_i(43,'Valign',top,d,[ str ]).
html_comp_i(44,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(44,'Class','col-xs-12',v,[ str ]).
html_comp_i(44,'Id','',d,[ str ]).
html_comp_i(44,'Height',measure(0,px),d,[ measure ]).
html_comp_i(44,'Width',measure(0,px),d,[ measure ]).
html_comp_i(44,'Semanticcontent',div,d,[ str ]).
html_comp_i(44,'Align',left,d,[ str ]).
html_comp_i(44,'Valign',top,d,[ str ]).
html_comp_i(45,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(45,'Class',' gx-attribute',v,[ str ]).
html_comp_i(45,'Id','',d,[ str ]).
html_comp_i(45,'Height',measure(0,px),d,[ measure ]).
html_comp_i(45,'Width',measure(0,px),d,[ measure ]).
html_comp_i(45,'Semanticcontent',div,d,[ str ]).
html_comp_i(45,'Align',left,d,[ str ]).
html_comp_i(45,'Valign',top,d,[ str ]).
html_comp_i(46,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(46,'Colcount',6,d,[ num ]).
html_comp_i(46,'Attid',9,v,[ num ]).
html_comp_i(46,'Class','Attribute',v,[ str ]).
html_comp_i(46,'Controlname','Sectorid',d,[ str ]).
html_comp_i(46,'Returnonclick',0,v,[ bool ]).
html_comp_i(46,'Eventgx','',d,[ str ]).
html_comp_i(46,'Captionclass','col-sm-3 AttributeLabel',v,[ str ]).
html_comp_i(46,'Captionstyle','',v,[ str ]).
html_comp_i(46,'Captionposition','None',v,[ str ]).
html_comp_i(46,'Captionvalue','Sector Id',d,[ str ]).
html_comp_i(46,'Layoutclass','',v,[ str ]).
html_comp_i(46,'Controltype',2,v,[ num ]).
html_comp_i(46,'Inputtype',0,v,[ num ]).
html_comp_i(46,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(46,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(46,'Readonly',-1,v,[ bool ]).
html_comp_i(46,'Autocomplete',-1,d,[ bool ]).
html_comp_i(46,'Ispassword',0,d,[ bool ]).
html_comp_i(46,'Autoresize',-1,d,[ bool ]).
html_comp_i(46,'Gxwidth',measure(6,chr),d,[ measure ]).
html_comp_i(46,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(46,'Ismultiline',0,d,[ bool ]).
html_comp_i(46,'Maxtextnumberlines',0,d,[ num ]).
html_comp_i(46,'Fill',-1,d,[ bool ]).
html_comp_i(46,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(46,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(46,'Font',font('Verdana',12,[]),d,[ font ]).
html_comp_i(46,'Horizontalalignment',right,d,[ str ]).
html_comp_i(46,'Gxformat',0,d,[ num ]).
html_comp_i(46,'Title','',d,[ str ]).
html_comp_i(46,'Invitemsg','',v,[ str ]).
 
 
 
 
 
 
 
 
 
lit_i(13,1,t('',3),[ ctlname('') ]).
lit_i(12,1,div(12),[ ctlname('') ]).
lit_i(15,1,button('''DoInsert'''),[ ctlname('Btninsert'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(16,1,button('''DoExport'''),[ ctlname('Btnexport'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(14,1,div(14),[ ctlname('Actions_inner') ]).
lit_i(11,1,div(11),[ ctlname('') ]).
lit_i(10,1,div(10),[ ctlname('') ]).
lit_i(9,1,div(9),[ ctlname('Tabletop') ]).
lit_i(8,1,div(8),[ ctlname('') ]).
lit_i(7,1,div(7),[ ctlname('') ]).
lit_i(19,1,comp(errview),[ ctlname('Errorviewer'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(18,1,div(18),[ ctlname('') ]).
lit_i(17,1,div(17),[ ctlname('') ]).
lit_i(26,1,s(t(55,2),25),[ ctlname(55),ctrltype(edit,26),pos(26),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(27,1,s(t(16,2),25),[ ctlname(16),ctrltype(edit,27),pos(27),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(28,1,s(t(17,2),25),[ ctlname(17),ctrltype(edit,28),pos(28),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(29,1,s(t(69,2),25),[ ctlname(69),ctrltype(edit,29),pos(29),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(30,1,s(t(85,2),25),[ ctlname(85),ctrltype(edit,30),pos(30),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(31,1,s(t(90,2),25),[ ctlname(90),ctrltype(edit,31),pos(31),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(32,1,s(t(88,2),25),[ ctlname(88),ctrltype(edit,32),pos(32),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(33,1,s(t(93,2),25),[ ctlname(93),ctrltype(edit,33),pos(33),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(34,1,s(t(2,2),25),[ ctlname(2),ctrltype(edit,34),pos(34),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(35,1,s(t(5,2),25),[ ctlname(5),ctrltype(edit,35),pos(35),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(36,1,s(t('State',23),25),[ ctlname('&State'),ctrltype(edit,36),pos(36),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(37,1,s(t(28,2),25),[ ctlname(28),ctrltype(edit,37),pos(37),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(38,1,s(t(19,2),25),[ ctlname(19),ctrltype(edit,38),pos(38),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(39,1,s(t(29,2),25),[ ctlname(29),ctrltype(edit,39),pos(39),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(40,1,s(t(87,2),25),[ ctlname(87),ctrltype(edit,40),pos(40),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(41,1,s(t(89,2),25),[ ctlname(89),ctrltype(edit,41),pos(41),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(42,1,s(t(110,2),25),[ ctlname(110),ctrltype(checkbox,42),pos(42),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(25,1,s(25),[ ctlname('Grid'),el([ t(55,2),t(16,2),t(17,2),t(69,2),t(85,2),t(90,2),t(88,2),t(93,2),t(2,2),t(5,2),t('State',23),t(28,2),t(19,2),t(29,2),t(87,2),t(89,2),t(110,2) ]),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(24,1,div(24),[ ctlname('') ]).
lit_i(23,1,div(23),[ ctlname('') ]).
lit_i(22,1,div(22),[ ctlname('Gridcontainer') ]).
lit_i(21,1,div(21),[ ctlname('') ]).
lit_i(20,1,div(20),[ ctlname('') ]).
lit_i(6,1,div(6),[ ctlname('Gridtable') ]).
lit_i(5,1,div(5),[ ctlname('Gridcell') ]).
lit_i(4,1,div(4),[ ctlname('') ]).
lit_i(46,1,t(9,2),[ ctlname(9),ctrltype(edit,46),pos(46),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(45,1,div(45),[ ctlname('') ]).
lit_i(44,1,div(44),[ ctlname('') ]).
lit_i(43,1,div(43),[ ctlname('') ]).
lit_i(3,1,div(3),[ ctlname('Maintable') ]).
lit_i(2,1,div(2),[ ctlname('') ]).
lit_i(1,1,window,[ rect(0,0,1000,1000),ctlname('Form') ]).
 
 
 
 
 
 
ctrl_info_i(1,42,[ [ true,false,'' ] ]).
 
 
calling_main_i(1,37).
 
att_prop_i(6,55,'ExternalName','ProductCode',d).
att_prop_i(6,55,'ExternalNamespace',mtaKB,d).
att_prop_i(6,55,'EmptyAsNull','Yes',d).
att_prop_i(6,55,idBasedOn,89,v).
att_prop_i(6,55,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,55,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(6,55,'AttRegEx','',d).
att_prop_i(6,55,'AttValidationFailedMsg','',d).
att_prop_i(6,55,'DownloadOffline','0',d).
att_prop_i(6,55,'VarServiceExtName','',d).
att_prop_i(6,55,'FullName','ProductCode',v).
att_prop_i(6,16,'ExternalName','ProductName',d).
att_prop_i(6,16,'ExternalNamespace',mtaKB,d).
att_prop_i(6,16,'EmptyAsNull','Yes',d).
att_prop_i(6,16,idBasedOn,93,v).
att_prop_i(6,16,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,16,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(6,16,'AttRegEx','',d).
att_prop_i(6,16,'AttValidationFailedMsg','',d).
att_prop_i(6,16,'DownloadOffline','0',d).
att_prop_i(6,16,'VarServiceExtName','',d).
att_prop_i(6,16,'FullName','ProductName',v).
att_prop_i(6,17,'ExternalName','ProductStock',d).
att_prop_i(6,17,'ExternalNamespace',mtaKB,d).
att_prop_i(6,17,'EmptyAsNull','Yes',d).
att_prop_i(6,17,idBasedOn,97,v).
att_prop_i(6,17,'AUTONUMBER','0',d).
att_prop_i(6,17,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,17,'AttRegEx','',d).
att_prop_i(6,17,'AttValidationFailedMsg','',d).
att_prop_i(6,17,'DownloadOffline','0',d).
att_prop_i(6,17,'VarServiceExtName','',d).
att_prop_i(6,17,'FullName','ProductStock',v).
att_prop_i(6,69,'ExternalName','ProductMiniumStock',d).
att_prop_i(6,69,'ExternalNamespace',mtaKB,d).
att_prop_i(6,69,'EmptyAsNull','Yes',d).
att_prop_i(6,69,idBasedOn,97,v).
att_prop_i(6,69,'AUTONUMBER','0',d).
att_prop_i(6,69,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,69,'AttRegEx','',d).
att_prop_i(6,69,'AttValidationFailedMsg','',d).
att_prop_i(6,69,'DownloadOffline','0',d).
att_prop_i(6,69,'VarServiceExtName','',d).
att_prop_i(6,69,'FullName','ProductMiniumStock',v).
att_prop_i(6,85,'ExternalName','ProductCostPrice',d).
att_prop_i(6,85,'ExternalNamespace',mtaKB,d).
att_prop_i(6,85,'EmptyAsNull','Yes',d).
att_prop_i(6,85,idBasedOn,94,v).
att_prop_i(6,85,'AUTONUMBER','0',d).
att_prop_i(6,85,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,85,'AttRegEx','',d).
att_prop_i(6,85,'AttValidationFailedMsg','Invalid Price',d).
att_prop_i(6,85,'DownloadOffline','0',d).
att_prop_i(6,85,'VarServiceExtName','',d).
att_prop_i(6,85,'FullName','ProductCostPrice',v).
att_prop_i(6,90,'ExternalName','ProductRetailPrice',d).
att_prop_i(6,90,'ExternalNamespace',mtaKB,d).
att_prop_i(6,90,idBasedOn,94,v).
att_prop_i(6,90,'DownloadOffline','0',d).
att_prop_i(6,90,'VarServiceExtName','',d).
att_prop_i(6,90,'FullName','ProductRetailPrice',v).
att_prop_i(6,88,'ExternalName','ProductWholesalePrice',d).
att_prop_i(6,88,'ExternalNamespace',mtaKB,d).
att_prop_i(6,88,idBasedOn,94,v).
att_prop_i(6,88,'DownloadOffline','0',d).
att_prop_i(6,88,'VarServiceExtName','',d).
att_prop_i(6,88,'FullName','ProductWholesalePrice',v).
att_prop_i(6,93,'ExternalName','ProductMiniumQuantityWholesale',d).
att_prop_i(6,93,'ExternalNamespace',mtaKB,d).
att_prop_i(6,93,'EmptyAsNull','Yes',d).
att_prop_i(6,93,idBasedOn,'',d).
att_prop_i(6,93,'AUTONUMBER','0',d).
att_prop_i(6,93,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,93,'AttRegEx','',d).
att_prop_i(6,93,'AttValidationFailedMsg','',d).
att_prop_i(6,93,'DownloadOffline','0',d).
att_prop_i(6,93,'VarServiceExtName','',d).
att_prop_i(6,93,'FullName','ProductMiniumQuantityWholesale',v).
att_prop_i(6,2,'ExternalName','BrandName',d).
att_prop_i(6,2,'ExternalNamespace',mtaKB,d).
att_prop_i(6,2,'EmptyAsNull','Yes',d).
att_prop_i(6,2,idBasedOn,93,v).
att_prop_i(6,2,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,2,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(6,2,'AttRegEx','',d).
att_prop_i(6,2,'AttValidationFailedMsg','',d).
att_prop_i(6,2,'DownloadOffline','0',d).
att_prop_i(6,2,'VarServiceExtName','',d).
att_prop_i(6,2,'FullName','BrandName',v).
att_prop_i(6,5,'ExternalName','SupplierName',d).
att_prop_i(6,5,'ExternalNamespace',mtaKB,d).
att_prop_i(6,5,'EmptyAsNull','Yes',d).
att_prop_i(6,5,idBasedOn,93,v).
att_prop_i(6,5,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,5,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(6,5,'AttRegEx','',d).
att_prop_i(6,5,'AttValidationFailedMsg','',d).
att_prop_i(6,5,'DownloadOffline','0',d).
att_prop_i(6,5,'VarServiceExtName','',d).
att_prop_i(6,5,'FullName','SupplierName',v).
att_prop_i(6,28,'ExternalName','ProductCreatedDate',d).
att_prop_i(6,28,'ExternalNamespace',mtaKB,d).
att_prop_i(6,28,'EmptyAsNull','Yes',d).
att_prop_i(6,28,idBasedOn,129,v).
att_prop_i(6,28,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,28,'AttRegEx','',d).
att_prop_i(6,28,'AttValidationFailedMsg','',d).
att_prop_i(6,28,idDATEFORMAT,idDATEFORMAT_LONG,d).
att_prop_i(6,28,'DownloadOffline','0',d).
att_prop_i(6,28,'VarServiceExtName','',d).
att_prop_i(6,28,'FullName','ProductCreatedDate',v).
att_prop_i(6,19,'ExternalName','ProductDescription',d).
att_prop_i(6,19,'ExternalNamespace',mtaKB,d).
att_prop_i(6,19,'EmptyAsNull','Yes',d).
att_prop_i(6,19,idBasedOn,88,v).
att_prop_i(6,19,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,19,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(6,19,'AttRegEx','',d).
att_prop_i(6,19,'AttValidationFailedMsg','',d).
att_prop_i(6,19,'DownloadOffline','0',d).
att_prop_i(6,19,'VarServiceExtName','',d).
att_prop_i(6,19,'FullName','ProductDescription',v).
att_prop_i(6,29,'ExternalName','ProductModifiedDate',d).
att_prop_i(6,29,'ExternalNamespace',mtaKB,d).
att_prop_i(6,29,'EmptyAsNull','Yes',d).
att_prop_i(6,29,idBasedOn,129,v).
att_prop_i(6,29,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,29,'AttRegEx','',d).
att_prop_i(6,29,'AttValidationFailedMsg','',d).
att_prop_i(6,29,idDATEFORMAT,idDATEFORMAT_LONG,d).
att_prop_i(6,29,'DownloadOffline','0',d).
att_prop_i(6,29,'VarServiceExtName','',d).
att_prop_i(6,29,'FullName','ProductModifiedDate',v).
att_prop_i(6,87,'ExternalName','ProductWholesaleProfit',d).
att_prop_i(6,87,'ExternalNamespace',mtaKB,d).
att_prop_i(6,87,'EmptyAsNull','Yes',d).
att_prop_i(6,87,idBasedOn,127,v).
att_prop_i(6,87,'AUTONUMBER','0',d).
att_prop_i(6,87,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,87,'AttRegEx','',d).
att_prop_i(6,87,'AttValidationFailedMsg','GXSPC_OutOfRange',d).
att_prop_i(6,87,'DownloadOffline','0',d).
att_prop_i(6,87,'VarServiceExtName','',d).
att_prop_i(6,87,'FullName','ProductWholesaleProfit',v).
att_prop_i(6,89,'ExternalName','ProductRetailProfit',d).
att_prop_i(6,89,'ExternalNamespace',mtaKB,d).
att_prop_i(6,89,'EmptyAsNull','Yes',d).
att_prop_i(6,89,idBasedOn,127,v).
att_prop_i(6,89,'AUTONUMBER','0',d).
att_prop_i(6,89,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,89,'AttRegEx','',d).
att_prop_i(6,89,'AttValidationFailedMsg','GXSPC_OutOfRange',d).
att_prop_i(6,89,'DownloadOffline','0',d).
att_prop_i(6,89,'VarServiceExtName','',d).
att_prop_i(6,89,'FullName','ProductRetailProfit',v).
att_prop_i(6,110,'ExternalName','ProductActive',d).
att_prop_i(6,110,'ExternalNamespace',mtaKB,d).
att_prop_i(6,110,'EmptyAsNull','Yes',d).
att_prop_i(6,110,'ExternalStorage','-1',d).
att_prop_i(6,110,idBasedOn,'',d).
att_prop_i(6,110,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,110,'AttRegEx','',d).
att_prop_i(6,110,'AttValidationFailedMsg','',d).
att_prop_i(6,110,'DownloadOffline','0',d).
att_prop_i(6,110,'VarServiceExtName','',d).
att_prop_i(6,110,'FullName','ProductActive',v).
att_prop_i(6,9,'ExternalName','SectorId',d).
att_prop_i(6,9,'ExternalNamespace',mtaKB,d).
att_prop_i(6,9,'EmptyAsNull','Yes',d).
att_prop_i(6,9,idBasedOn,92,v).
att_prop_i(6,9,'AUTONUMBER','-1',d).
att_prop_i(6,9,'AUTONUMBER_START','1',d).
att_prop_i(6,9,'AUTONUMBER_STEP','1',d).
att_prop_i(6,9,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(6,9,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,9,'AttRegEx','',d).
att_prop_i(6,9,'AttValidationFailedMsg','',d).
att_prop_i(6,9,'DownloadOffline','0',d).
att_prop_i(6,9,'VarServiceExtName','',d).
att_prop_i(6,9,'FullName','SectorId',v).
att_prop_i(6,4,'ExternalName','SupplierId',d).
att_prop_i(6,4,'ExternalNamespace',mtaKB,d).
att_prop_i(6,4,'EmptyAsNull','Yes',d).
att_prop_i(6,4,idBasedOn,92,v).
att_prop_i(6,4,'AUTONUMBER','-1',d).
att_prop_i(6,4,'AUTONUMBER_START','1',d).
att_prop_i(6,4,'AUTONUMBER_STEP','1',d).
att_prop_i(6,4,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(6,4,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,4,'AttRegEx','',d).
att_prop_i(6,4,'AttValidationFailedMsg','',d).
att_prop_i(6,4,'DownloadOffline','0',d).
att_prop_i(6,4,'VarServiceExtName','',d).
att_prop_i(6,4,'FullName','SupplierId',v).
att_prop_i(6,1,'ExternalName','BrandId',d).
att_prop_i(6,1,'ExternalNamespace',mtaKB,d).
att_prop_i(6,1,'EmptyAsNull','Yes',d).
att_prop_i(6,1,idBasedOn,92,v).
att_prop_i(6,1,'AUTONUMBER','-1',d).
att_prop_i(6,1,'AUTONUMBER_START','1',d).
att_prop_i(6,1,'AUTONUMBER_STEP','1',d).
att_prop_i(6,1,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(6,1,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,1,'AttRegEx','',d).
att_prop_i(6,1,'AttValidationFailedMsg','',d).
att_prop_i(6,1,'DownloadOffline','0',d).
att_prop_i(6,1,'VarServiceExtName','',d).
att_prop_i(6,1,'FullName','BrandId',v).
att_prop_i(6,15,'ExternalName','ProductId',d).
att_prop_i(6,15,'ExternalNamespace',mtaKB,d).
att_prop_i(6,15,'EmptyAsNull','Yes',d).
att_prop_i(6,15,idBasedOn,92,v).
att_prop_i(6,15,'AUTONUMBER','-1',d).
att_prop_i(6,15,'AUTONUMBER_START','1',d).
att_prop_i(6,15,'AUTONUMBER_STEP','1',d).
att_prop_i(6,15,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(6,15,'ATT_INITIAL_VALUE','',d).
att_prop_i(6,15,'AttRegEx','',d).
att_prop_i(6,15,'AttValidationFailedMsg','',d).
att_prop_i(6,15,'DownloadOffline','0',d).
att_prop_i(6,15,'VarServiceExtName','',d).
att_prop_i(6,15,'FullName','ProductId',v).
 
tbl_prop_i(6,5,'AllDirSuper',[ [ 2,[ 4 ] ],[ 1,[ 1 ] ] ],v).
tbl_prop_i(6,5,'DirSuperNull',[ [ 1,[ 1 ] ] ],v).
tbl_prop_i(6,2,'DirSubor',[ [ 5,[ 4 ] ] ],v).
tbl_prop_i(6,1,'DirSubor',[ [ 5,[ 1 ] ] ],v).
tbl_prop_i(6,5,'DirSuper',[ [ 2,[ 4 ] ],[ 1,[ 1 ] ] ],v).
 
tbl_att_prop_i(6,5,15,'AllowNulls',n).
tbl_att_prop_i(6,5,15,'AUTONUMBER',y).
tbl_att_prop_i(6,5,16,'AllowNulls',n).
tbl_att_prop_i(6,5,4,'AllowNulls',n).
tbl_att_prop_i(6,5,28,'AllowNulls',n).
tbl_att_prop_i(6,5,29,'AllowNulls',n).
tbl_att_prop_i(6,1,1,'AllowNulls',n).
tbl_att_prop_i(6,1,1,'AUTONUMBER',y).
tbl_att_prop_i(6,1,2,'AllowNulls',n).
tbl_att_prop_i(6,2,4,'AllowNulls',n).
tbl_att_prop_i(6,2,4,'AUTONUMBER',y).
tbl_att_prop_i(6,2,5,'AllowNulls',n).
 
var_prop_i(6,'Sectorid',idBasedOn,'',v).
var_prop_i(6,'Excelfilename',idBasedOn,33,v).
var_prop_i(6,'Excelfilename','AttRegEx','^((?:[a-zA-Z]+:(//)?)?((?:(?:[a-zA-Z]([a-zA-Z0-9$\-_@&+!*"''(),]|%[0-9a-fA-F]{2})*)(?:\.(?:([a-zA-Z0-9$\-_@&+!*"''(),]|%[0-9a-fA-F]{2})*))*)|(?:(\d{1,3}\.){3}\d{1,3}))(?::\d+)?(?:/([a-zA-Z0-9$\-_@.&+!*"''(),=;: ]|%[0-9a-fA-F]{2})+)*/?(?:[#?](?:[a-zA-Z0-9$\-_@.&+!*"''(),=;: /]|%[0-9a-fA-F]{2})*)?)?\s*$',d).
var_prop_i(6,'Excelfilename','AttValidationFailedMsg','GXM_DoesNotMatchRegExp',d).
 
 
 
 
 
struct_dt_i([ 26,20,0 ],name,'GeneXus\Common\GridState').
struct_dt_i([ 26,20,0 ],namespace,'GeneXus').
struct_dt_i([ 26,20,0 ],'ObjName','GridState').
struct_dt_i([ 26,20,0 ],'ObjDesc','Grid State').
struct_dt_i([ 26,20,0 ],'ExternalName','GridState').
struct_dt_i([ 26,20,0 ],'ExternalNamespace','GeneXus').
struct_dt_i([ 26,20,0 ],'JsonInputFormat','JsonInputWrapped').
struct_dt_i([ 26,20,0 ],'JsonInclude',idJsonNoProperty).
struct_dt_i([ 26,20,0 ],isexternal,'True').
struct_dt_i([ 26,20,39 ],name,'InputValuesItem').
struct_dt_i([ 26,20,39 ],namespace,'GeneXus.GridState').
struct_dt_i([ 26,61,0 ],name,'General\UI\TransactionContext').
struct_dt_i([ 26,61,0 ],namespace,mtaKB).
struct_dt_i([ 26,61,0 ],'ObjName','TransactionContext').
struct_dt_i([ 26,61,0 ],'ObjDesc','Transaction Context').
struct_dt_i([ 26,61,0 ],'ExternalName','TransactionContext').
struct_dt_i([ 26,61,0 ],'ExternalNamespace',mtaKB).
struct_dt_i([ 26,61,0 ],'JsonInputFormat','JsonInputWrapped').
struct_dt_i([ 26,61,0 ],'JsonInclude',idJsonNoProperty).
struct_dt_i([ 26,61,95 ],name,'Attribute').
struct_dt_i([ 26,61,95 ],namespace,'mtaKB.TransactionContext').
struct_dt_i([ 26,20,0 ],fullname,'GeneXus\Common\GridState').
struct_dt_i([ 26,20,39 ],fullname,'GeneXus\Common\GridState.InputValuesItem').
struct_dt_i([ 26,61,0 ],fullname,'General\UI\TransactionContext').
struct_dt_i([ 26,61,95 ],fullname,'General\UI\TransactionContext.Attribute').
 
struct_dt_elem_i([ 26,20,0 ],1,name,'Currentpage').
struct_dt_elem_i([ 26,20,0 ],1,camelname,'CurrentPage').
struct_dt_elem_i([ 26,20,0 ],1,length,5).
struct_dt_elem_i([ 26,20,0 ],1,decimals,0).
struct_dt_elem_i([ 26,20,0 ],1,sign,0).
struct_dt_elem_i([ 26,20,0 ],1,type,[ 4,5,0 ]).
struct_dt_elem_i([ 26,20,0 ],1,pic,'ZZZZ9').
struct_dt_elem_i([ 26,20,0 ],1,collection,'False').
struct_dt_elem_i([ 26,20,0 ],1,'ExternalName','CurrentPage').
struct_dt_elem_i([ 26,20,0 ],1,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,20,0 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,20,0 ],1,'XmlName','').
struct_dt_elem_i([ 26,20,0 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,20,0 ],1,soaptype,'').
struct_dt_elem_i([ 26,20,0 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,20,0 ],1,'JsonName','').
struct_dt_elem_i([ 26,20,0 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,20,0 ],2,name,'Orderedby').
struct_dt_elem_i([ 26,20,0 ],2,camelname,'OrderedBy').
struct_dt_elem_i([ 26,20,0 ],2,length,4).
struct_dt_elem_i([ 26,20,0 ],2,decimals,0).
struct_dt_elem_i([ 26,20,0 ],2,sign,0).
struct_dt_elem_i([ 26,20,0 ],2,type,[ 4,4,0 ]).
struct_dt_elem_i([ 26,20,0 ],2,pic,'ZZZ9').
struct_dt_elem_i([ 26,20,0 ],2,collection,'False').
struct_dt_elem_i([ 26,20,0 ],2,'ExternalName','OrderedBy').
struct_dt_elem_i([ 26,20,0 ],2,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,20,0 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,20,0 ],2,'XmlName','').
struct_dt_elem_i([ 26,20,0 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,20,0 ],2,soaptype,'').
struct_dt_elem_i([ 26,20,0 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,20,0 ],2,'JsonName','').
struct_dt_elem_i([ 26,20,0 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,20,0 ],3,name,'Inputvalues').
struct_dt_elem_i([ 26,20,0 ],3,camelname,'InputValues').
struct_dt_elem_i([ 26,20,0 ],3,type,[ [ 26,20,39 ],0,0 ]).
struct_dt_elem_i([ 26,20,0 ],3,pic,'').
struct_dt_elem_i([ 26,20,0 ],3,collection,'True').
struct_dt_elem_i([ 26,20,0 ],3,'ObjName','InputValues').
struct_dt_elem_i([ 26,20,0 ],3,'ObjDesc','Input Values').
struct_dt_elem_i([ 26,20,0 ],3,'CollectionItemName','InputValuesItem').
struct_dt_elem_i([ 26,20,0 ],3,'XmlName','').
struct_dt_elem_i([ 26,20,0 ],3,'XmlCollectionItemName','').
struct_dt_elem_i([ 26,20,0 ],3,'XmlNamespace','').
struct_dt_elem_i([ 26,20,0 ],3,'CollectionSerialization',idXmlCollectionWrapped).
struct_dt_elem_i([ 26,20,0 ],3,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,20,0 ],3,'JsonName','').
struct_dt_elem_i([ 26,20,0 ],3,'JsonInclude',idJsonNoProperty).
struct_dt_elem_i([ 26,20,0 ],3,'JsonCollectionSerialization',idXmlCollectionWrapped).
struct_dt_elem_i([ 26,20,39 ],1,name,'Name').
struct_dt_elem_i([ 26,20,39 ],1,camelname,'Name').
struct_dt_elem_i([ 26,20,39 ],1,length,256).
struct_dt_elem_i([ 26,20,39 ],1,decimals,0).
struct_dt_elem_i([ 26,20,39 ],1,type,[ 13,256,0 ]).
struct_dt_elem_i([ 26,20,39 ],1,pic,'').
struct_dt_elem_i([ 26,20,39 ],1,collection,'False').
struct_dt_elem_i([ 26,20,39 ],1,'ExternalName','Name').
struct_dt_elem_i([ 26,20,39 ],1,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,20,39 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,20,39 ],1,'XmlName','').
struct_dt_elem_i([ 26,20,39 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,20,39 ],1,soaptype,'').
struct_dt_elem_i([ 26,20,39 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,20,39 ],1,'JsonName','').
struct_dt_elem_i([ 26,20,39 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,20,39 ],2,name,'Value').
struct_dt_elem_i([ 26,20,39 ],2,camelname,'Value').
struct_dt_elem_i([ 26,20,39 ],2,length,256).
struct_dt_elem_i([ 26,20,39 ],2,decimals,0).
struct_dt_elem_i([ 26,20,39 ],2,type,[ 13,256,0 ]).
struct_dt_elem_i([ 26,20,39 ],2,pic,'').
struct_dt_elem_i([ 26,20,39 ],2,collection,'False').
struct_dt_elem_i([ 26,20,39 ],2,'ExternalName','Value').
struct_dt_elem_i([ 26,20,39 ],2,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,20,39 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,20,39 ],2,'XmlName','').
struct_dt_elem_i([ 26,20,39 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,20,39 ],2,soaptype,'').
struct_dt_elem_i([ 26,20,39 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,20,39 ],2,'JsonName','').
struct_dt_elem_i([ 26,20,39 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,61,0 ],1,name,'Callerobject').
struct_dt_elem_i([ 26,61,0 ],1,camelname,'CallerObject').
struct_dt_elem_i([ 26,61,0 ],1,basedon,54).
struct_dt_elem_i([ 26,61,0 ],1,length,256).
struct_dt_elem_i([ 26,61,0 ],1,decimals,0).
struct_dt_elem_i([ 26,61,0 ],1,type,[ 13,256,0 ]).
struct_dt_elem_i([ 26,61,0 ],1,pic,'').
struct_dt_elem_i([ 26,61,0 ],1,collection,'False').
struct_dt_elem_i([ 26,61,0 ],1,'ExternalName','CallerObject').
struct_dt_elem_i([ 26,61,0 ],1,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,61,0 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,61,0 ],1,'XmlName','').
struct_dt_elem_i([ 26,61,0 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,61,0 ],1,soaptype,'').
struct_dt_elem_i([ 26,61,0 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,61,0 ],1,'JsonName','').
struct_dt_elem_i([ 26,61,0 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,61,0 ],2,name,'Callerondelete').
struct_dt_elem_i([ 26,61,0 ],2,camelname,'CallerOnDelete').
struct_dt_elem_i([ 26,61,0 ],2,length,4).
struct_dt_elem_i([ 26,61,0 ],2,decimals,0).
struct_dt_elem_i([ 26,61,0 ],2,type,[ 15,4,0 ]).
struct_dt_elem_i([ 26,61,0 ],2,pic,'').
struct_dt_elem_i([ 26,61,0 ],2,collection,'False').
struct_dt_elem_i([ 26,61,0 ],2,'ExternalName','CallerOnDelete').
struct_dt_elem_i([ 26,61,0 ],2,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,61,0 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,61,0 ],2,'XmlName','').
struct_dt_elem_i([ 26,61,0 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,61,0 ],2,soaptype,'').
struct_dt_elem_i([ 26,61,0 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,61,0 ],2,'JsonName','').
struct_dt_elem_i([ 26,61,0 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,61,0 ],3,name,'Callerurl').
struct_dt_elem_i([ 26,61,0 ],3,camelname,'CallerURL').
struct_dt_elem_i([ 26,61,0 ],3,basedon,33).
struct_dt_elem_i([ 26,61,0 ],3,length,1000).
struct_dt_elem_i([ 26,61,0 ],3,decimals,0).
struct_dt_elem_i([ 26,61,0 ],3,type,[ 13,1000,0 ]).
struct_dt_elem_i([ 26,61,0 ],3,pic,'').
struct_dt_elem_i([ 26,61,0 ],3,collection,'False').
struct_dt_elem_i([ 26,61,0 ],3,'ExternalName','CallerURL').
struct_dt_elem_i([ 26,61,0 ],3,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,61,0 ],3,'XmlType','Element').
struct_dt_elem_i([ 26,61,0 ],3,'XmlName','').
struct_dt_elem_i([ 26,61,0 ],3,'XmlNamespace','').
struct_dt_elem_i([ 26,61,0 ],3,soaptype,'').
struct_dt_elem_i([ 26,61,0 ],3,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,61,0 ],3,'JsonName','').
struct_dt_elem_i([ 26,61,0 ],3,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,61,0 ],4,name,'Transactionname').
struct_dt_elem_i([ 26,61,0 ],4,camelname,'TransactionName').
struct_dt_elem_i([ 26,61,0 ],4,basedon,54).
struct_dt_elem_i([ 26,61,0 ],4,length,256).
struct_dt_elem_i([ 26,61,0 ],4,decimals,0).
struct_dt_elem_i([ 26,61,0 ],4,type,[ 13,256,0 ]).
struct_dt_elem_i([ 26,61,0 ],4,pic,'').
struct_dt_elem_i([ 26,61,0 ],4,collection,'False').
struct_dt_elem_i([ 26,61,0 ],4,'ExternalName','TransactionName').
struct_dt_elem_i([ 26,61,0 ],4,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,61,0 ],4,'XmlType','Element').
struct_dt_elem_i([ 26,61,0 ],4,'XmlName','').
struct_dt_elem_i([ 26,61,0 ],4,'XmlNamespace','').
struct_dt_elem_i([ 26,61,0 ],4,soaptype,'').
struct_dt_elem_i([ 26,61,0 ],4,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,61,0 ],4,'JsonName','').
struct_dt_elem_i([ 26,61,0 ],4,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,61,0 ],5,name,'Attributes').
struct_dt_elem_i([ 26,61,0 ],5,camelname,'Attributes').
struct_dt_elem_i([ 26,61,0 ],5,type,[ [ 26,61,95 ],0,0 ]).
struct_dt_elem_i([ 26,61,0 ],5,pic,'').
struct_dt_elem_i([ 26,61,0 ],5,collection,'True').
struct_dt_elem_i([ 26,61,0 ],5,'ObjName','Attributes').
struct_dt_elem_i([ 26,61,0 ],5,'ObjDesc','Attributes').
struct_dt_elem_i([ 26,61,0 ],5,'CollectionItemName','Attribute').
struct_dt_elem_i([ 26,61,0 ],5,'XmlName','').
struct_dt_elem_i([ 26,61,0 ],5,'XmlCollectionItemName','').
struct_dt_elem_i([ 26,61,0 ],5,'XmlNamespace','').
struct_dt_elem_i([ 26,61,0 ],5,'CollectionSerialization',idXmlCollectionWrapped).
struct_dt_elem_i([ 26,61,0 ],5,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,61,0 ],5,'JsonName','').
struct_dt_elem_i([ 26,61,0 ],5,'JsonInclude',idJsonNoProperty).
struct_dt_elem_i([ 26,61,0 ],5,'JsonCollectionSerialization',idXmlCollectionWrapped).
struct_dt_elem_i([ 26,61,95 ],1,name,'Attributename').
struct_dt_elem_i([ 26,61,95 ],1,camelname,'AttributeName').
struct_dt_elem_i([ 26,61,95 ],1,length,128).
struct_dt_elem_i([ 26,61,95 ],1,decimals,0).
struct_dt_elem_i([ 26,61,95 ],1,type,[ 13,128,0 ]).
struct_dt_elem_i([ 26,61,95 ],1,pic,'').
struct_dt_elem_i([ 26,61,95 ],1,collection,'False').
struct_dt_elem_i([ 26,61,95 ],1,'ExternalName','AttributeName').
struct_dt_elem_i([ 26,61,95 ],1,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,61,95 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,61,95 ],1,'XmlName','').
struct_dt_elem_i([ 26,61,95 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,61,95 ],1,soaptype,'').
struct_dt_elem_i([ 26,61,95 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,61,95 ],1,'JsonName','').
struct_dt_elem_i([ 26,61,95 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,61,95 ],2,name,'Attributevalue').
struct_dt_elem_i([ 26,61,95 ],2,camelname,'AttributeValue').
struct_dt_elem_i([ 26,61,95 ],2,length,1000).
struct_dt_elem_i([ 26,61,95 ],2,decimals,0).
struct_dt_elem_i([ 26,61,95 ],2,type,[ 13,1000,0 ]).
struct_dt_elem_i([ 26,61,95 ],2,pic,'').
struct_dt_elem_i([ 26,61,95 ],2,collection,'False').
struct_dt_elem_i([ 26,61,95 ],2,'ExternalName','AttributeValue').
struct_dt_elem_i([ 26,61,95 ],2,'ExternalNamespace',mtaKB).
struct_dt_elem_i([ 26,61,95 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,61,95 ],2,'XmlName','').
struct_dt_elem_i([ 26,61,95 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,61,95 ],2,soaptype,'').
struct_dt_elem_i([ 26,61,95 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,61,95 ],2,'JsonName','').
struct_dt_elem_i([ 26,61,95 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,61,0 ],3,pic,'99/99/99').
 
 
 
 
 
sub_info_i(146,'Start',1,19,[ [ 'Pgmname',[ t('Httprequest',23),t('Querystring',3) ],[ t('Httprequest',23),t('Scriptname',3) ],'Sectorid' ],[ [ t('Btninsert',3),t('Visible',3) ],[ t('Btninsert',3),t('Enabled',3) ],[ t('Grid',3),t('Rows',3) ],[ t(9,2),t('Visible',3) ] ] ]).
sub_info_i(146,[ t('Grid',3,21,7),t('Load',3,21,12) ],21,38,[ [ 15,1,4 ],[ [ t(16,2),t('Link',3) ],[ t(2,2),t('Link',3) ],[ t(5,2),t('Link',3) ],'State' ] ]).
sub_info_i(146,'''DoInsert''',40,42,[ [ 15 ],[] ]).
sub_info_i(146,'''DoExport''',45,54,[ [ 'Sectorid' ],[] ]).
 
pgm_parm_i(proc,65,'EXPORTSECTORPRODUCTWC',[ [ int,6,0,0 ],[ svchar,1000,0,0 ],[ svchar,512,0,0 ] ],[ [ 'SectorId',in,[] ],[ 'Filename',out,[] ],[ 'ErrorMessage',out,[] ] ]).
pgm_parm_i(trn,5,'PRODUCT',[ [ char,3,0,0 ],[ int,6,0,0 ] ],[ [ 'Mode',in,[] ],[ 'ProductId',in,[] ] ]).
pgm_parm_i(web,13,'GENERAL\SECURITY\NOTAUTHORIZED',[ [ svchar,256,0,0 ] ],[ [ 'GxObject',in,[] ] ]).
pgm_parm_i(proc,42,'ROUNDVALUE',[ [ int,18,2,0 ],[ int,18,2,0 ] ],[ [ 'Value',in,[] ],[ 'ValueRounded',out,[] ] ]).
pgm_parm_i(proc,91,'PRODUCTGETSTATE',[ [ int,6,0,0 ],[ svchar,40,0,0 ] ],[ [ 'ProductId',in,[] ],[ 'State',out,[] ] ]).
pgm_parm_i(web,45,'VIEWSUPPLIER',[ [ int,6,0,0 ],[ char,50,0,0 ] ],[ [ 'SupplierId',in,[] ],[ 'TabCode',in,[] ] ]).
pgm_parm_i(web,14,'VIEWBRAND',[ [ int,6,0,0 ],[ char,50,0,0 ] ],[ [ 'BrandId',in,[] ],[ 'TabCode',in,[] ] ]).
pgm_parm_i(web,104,'VIEWPRODUCT',[ [ int,6,0,0 ],[ char,50,0,0 ] ],[ [ 'ProductId',in,[] ],[ 'TabCode',in,[] ] ]).
pgm_parm_i(proc,13,'GENERAL\SECURITY\ISAUTHORIZED',[ [ svchar,256,0,0 ],[ boolean,4,0,0 ] ],[ [ 'GxObject',in,[] ],[ 'Authorized',out,[] ] ]).
pgm_parm_i(proc,58,'HASPERMISSION',[ [ svchar,60,0,0 ],[ boolean,4,0,0 ] ],[ [ 'PermissionName',in,[] ],[ 'Has',out,[] ] ]).
 
pgm_callprotocol_i(web,44,'SECTORPRODUCTWC','INTERNAL','Unsecure').
pgm_callprotocol_i(proc,65,'EXPORTSECTORPRODUCTWC','INTERNAL','Unsecure').
pgm_callprotocol_i(trn,5,'PRODUCT','INTERNAL','Unsecure').
pgm_callprotocol_i(web,13,'GENERAL\SECURITY\NOTAUTHORIZED','INTERNAL','Unsecure').
pgm_callprotocol_i(proc,42,'ROUNDVALUE','INTERNAL','Unsecure').
pgm_callprotocol_i(proc,91,'PRODUCTGETSTATE','INTERNAL','Unsecure').
pgm_callprotocol_i(web,45,'VIEWSUPPLIER','INTERNAL','Unsecure').
pgm_callprotocol_i(web,14,'VIEWBRAND','INTERNAL','Unsecure').
pgm_callprotocol_i(web,104,'VIEWPRODUCT','INTERNAL','Unsecure').
pgm_callprotocol_i(proc,13,'GENERAL\SECURITY\ISAUTHORIZED','INTERNAL','Unsecure').
pgm_callprotocol_i(proc,58,'HASPERMISSION','INTERNAL','Unsecure').
 
 
 
 
module_info_i('GeneXus\Common','CSHARP_NAME_SPACE','GeneXus.Core').
module_info_i('GeneXus\Common','AssemblyName','GeneXus.dll').
module_info_i('GeneXus','CSHARP_NAME_SPACE','GeneXus.Core').
module_info_i('GeneXus','AssemblyName','GeneXus.dll').
module_info_i('GeneXusUnanimo','CSHARP_NAME_SPACE','GeneXus.Programs').
module_info_i('GeneXusUnanimo','AssemblyName','GeneXusUnanimo.dll').
 
 
 
 
 
 
 
 
 
 
